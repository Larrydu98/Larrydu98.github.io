(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{587:function(s,a,t){"use strict";t.r(a);var e=t(10),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h2",{attrs:{id:"_1-什么是索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-什么是索引"}},[s._v("#")]),s._v(" 1 什么是索引")]),s._v(" "),t("p",[s._v("索引在数据库中的作用类似于目录在书籍中的作用，用来提高查找信息的速度。使用索引查找数据，无 需对整表进行扫描，可以快速找到所需数据。")]),s._v(" "),t("h2",{attrs:{id:"_2-什么时候用索引-什么时候不用索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-什么时候用索引-什么时候不用索引"}},[s._v("#")]),s._v(" 2 什么时候用索引，什么时候不用索引")]),s._v(" "),t("p",[s._v("一般来说，在数据表中的数据行数比较少的时候，比如不到 1000 行的情况，是不用加索引，另外，如 果数据重复读比较高比如高于 10% 也是不用增加索引。")]),s._v(" "),t("ul",[t("li",[s._v("对于中大型表建立索引非常有效，对于非常小的表，一般全部表扫描速度更快些。")]),s._v(" "),t("li",[s._v("对于超大型的表，建立和维护索引的代价也会变高，这时可以考虑分区技术。")]),s._v(" "),t("li",[s._v("如果表的增删改非常多，而查询需求非常少的话，那就没有必要建立索引了，因为维护索引也是需要代价的。")]),s._v(" "),t("li",[s._v("一般不会出现在where条件中的字段就没有必要建立索引了。")]),s._v(" "),t("li",[s._v("多个字段经常被查询的话可以考虑联合索引。")]),s._v(" "),t("li",[s._v("字段多且字段值没有重复的时候考虑唯一索引。")]),s._v(" "),t("li",[s._v("字段多且有重复的时候考虑普通索引。")])]),s._v(" "),t("h2",{attrs:{id:"_3-索引的优缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_3-索引的优缺点"}},[s._v("#")]),s._v(" 3 索引的优缺点")]),s._v(" "),t("h3",{attrs:{id:"索引的优点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引的优点"}},[s._v("#")]),s._v(" 索引的优点")]),s._v(" "),t("ul",[t("li",[s._v("索引可以减少服务器需要扫描的数据量，从而大大提高查询效率")]),s._v(" "),t("li",[s._v("通过使用索引，可以在查询的过程中，使用优化隐藏器，提高系统的性能。")]),s._v(" "),t("li",[s._v("唯一索引能保证表中数据的唯一性")])]),s._v(" "),t("h3",{attrs:{id:"索引的缺点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#索引的缺点"}},[s._v("#")]),s._v(" 索引的缺点")]),s._v(" "),t("ul",[t("li",[s._v("时间方面：创建索引和维护索引要耗费时间，具体地，当对表中的数据进行增加、删除和修改的时候，索引也要动态的维护，会降低增/改/删的执行效率；")]),s._v(" "),t("li",[s._v("空间方面：索引需要占物理空间。")]),s._v(" "),t("li",[s._v("不恰当的使用索引会造成服务器重复扫描数据，造成查询浪费。")])]),s._v(" "),t("h2",{attrs:{id:"_4-创建-删除索引的三种方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_4-创建-删除索引的三种方式"}},[s._v("#")]),s._v(" 4 创建/删除索引的三种方式")]),s._v(" "),t("h3",{attrs:{id:"创建索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建索引"}},[s._v("#")]),s._v(" 创建索引")]),s._v(" "),t("p",[t("strong",[s._v("第一种方式：在执行 CREATE TABLE 时创建索引")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" user_index2\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    id          "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INT")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("auto_increment")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    first_name  "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    last_name   "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    id_card     "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("18")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    information "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("text")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v("         name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("first_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" last_name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    FULLTEXT    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("information"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("UNIQUE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("id_card"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("p",[t("strong",[s._v("第二种方式：使用 ALTER TABLE 命令去增加索引")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" table_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("ALTER TABLE 用来创建普通索引、UNIQUE 索引或 PRIMARY KEY 索引。 其中 table_name 是要增加索引的表名，column_list 指出对哪些列进行索引，多列时各列之间用逗号分 隔。 微信搜【暖蓝笔记】获取国企银行精品原创文章")]),s._v(" "),t("p",[s._v("索引名 index_name 可自己命名，缺省时，MySQL 将根据第一个索引列赋一个名称。另外，ALTER TABLE 允许在单个语句中更改多个表，因此可以在同时创建多个索引。")]),s._v(" "),t("p",[t("strong",[s._v("第三种方式：使用 REATE INDEX 命令创建")])]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" index_name "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ON")]),s._v(" table_name "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("column_list"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("CREATE INDEX 可对表增加普通索引或 UNIQUE 索引。（但是，不能创建PRIMARY KEY索引）")]),s._v(" "),t("h3",{attrs:{id:"删除索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#删除索引"}},[s._v("#")]),s._v(" 删除索引")]),s._v(" "),t("p",[s._v("根据索引名删除普通索引、唯一索引、全文索引：alter table 表名 drop KEY 索引名")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" user_index\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" user_index\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" id_card"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" user_index\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" information"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("删除主键索引：alter table 表名 drop primary key（因为主键只有一个）。这里值得注意的是，如果主")]),s._v(" "),t("p",[s._v("键自增长，那么不能直接执行此操作（自增长依赖于主键索引）： 需要取消自增长再行删除：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("alter")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("table")]),s._v(" user_index "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 重新定义字段 ")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("MODIFY")]),s._v(" id "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("drop")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("h2",{attrs:{id:"_5-什么情况下加索引以及不加索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_5-什么情况下加索引以及不加索引"}},[s._v("#")]),s._v(" 5 什么情况下加索引以及不加索引")]),s._v(" "),t("h3",{attrs:{id:"增加索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#增加索引"}},[s._v("#")]),s._v(" 增加索引")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("字段的数值有唯一性的限制")]),s._v(" "),t("p",[s._v("索引本身可以起到约束的作用，比如唯一索引、主键索引都是可以起到唯一性约束的，因此在我们的数 据表中，如果某个字段是唯一性的，就可以直接创建唯一性索引，或者主键索引。")])]),s._v(" "),t("li",[t("p",[s._v("频繁作为 WHERE 查询条件的字段，尤其在数据表大的情况下")]),s._v(" "),t("p",[s._v("在数据量大的情况下，某个字段在 SQL 查询的 WHERE 条件中经常被使用到，那么就需要给这个字段创 建索引了。创建普通索引就可以大幅提升数据查询的效率。")])]),s._v(" "),t("li",[t("p",[s._v("需要经常 GROUP BY 和 ORDER BY 的列")]),s._v(" "),t("p",[s._v("索引就是让数据按照某种顺序进行存储或检索，因此当我们使用 GROUP BY 对数据进行分组查询，或者 使用 ORDER BY 对数据进行排序的时候，就需要对分组或者排序的字段进行索引。")])]),s._v(" "),t("li",[t("p",[s._v("UPDATE、DELETE 的 WHERE 条件列，一般也需要创建索引")]),s._v(" "),t("p",[s._v("对数据按照某个条件进行查询后再进行 UPDATE 或 DELETE 的操作，如果对 WHERE 字段创建了索引，就能大幅提升效率。")])]),s._v(" "),t("li",[t("p",[s._v("DISTINCT 字段需要创建索引")])])]),s._v(" "),t("h3",{attrs:{id:"不加索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#不加索引"}},[s._v("#")]),s._v(" 不加索引")]),s._v(" "),t("ul",[t("li",[s._v("WHERE条件（包括 GROUP BY、ORDER BY）里"),t("strong",[s._v("用不到的字段不需要创建索引")]),s._v("，索引的价值是快速定位，如果起不到定位的字段通常是不需要创建索引的")]),s._v(" "),t("li",[s._v("表记录太少，比如少于 1000 个，那么是不需要创建索引的。")]),s._v(" "),t("li",[s._v("字段中如果有大量重复数据，也不用创建索引，比如性别字段。")]),s._v(" "),t("li",[s._v("频繁更新的字段不一定要创建索引。因为更新数据的时候，也需要更新索引，如果索 引太多，在更新索引的时候也会造成负担，从而影响效率。")])]),s._v(" "),t("h2",{attrs:{id:"_6-索引类型"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_6-索引类型"}},[s._v("#")]),s._v(" 6 索引类型")]),s._v(" "),t("h3",{attrs:{id:"从功能逻辑划分"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#从功能逻辑划分"}},[s._v("#")]),s._v(" 从功能逻辑划分")]),s._v(" "),t("p",[s._v("那么有4种索引，分别为"),t("strong",[s._v("普通索引")]),s._v("、唯一索引、"),t("strong",[s._v("主键索引")]),s._v("及"),t("strong",[s._v("全文索引")]),s._v("。")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("普通索引")]),s._v("：最基础的索引，无任何约束，目的很单纯，仅仅为了提高查询效率。")]),s._v(" "),t("li",[t("strong",[s._v("唯一索引（unique）")]),s._v("：相比于普通索引增加了唯一性约束，一张表中可以有多个唯一索引。")]),s._v(" "),t("li",[t("strong",[s._v("主键索引（primary）")]),s._v("：在唯一索引的基础上又加了不为空的约束，即 NOT NULL + UNIQUE，一张表中最多只有一个主键索引。")]),s._v(" "),t("li",[t("strong",[s._v("全文索引（fulltext）")]),s._v("：很少使用全文索引，如果要用可能会借助其他的更加专业的搜索引擎如 ES。")])]),s._v(" "),t("h3",{attrs:{id:"按照物理实现方式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#按照物理实现方式"}},[s._v("#")]),s._v(" 按照物理实现方式")]),s._v(" "),t("p",[s._v("按照物理实现的方式分别为"),t("strong",[s._v("聚集索引")]),s._v("和"),t("strong",[s._v("二级索引")]),s._v("；两者的根本区别在于"),t("strong",[s._v("表记录的排列顺序")]),s._v("和与"),t("strong",[s._v("索引的排列顺序")]),s._v("是否一致。")]),s._v(" "),t("p",[t("strong",[s._v("聚集索引")]),s._v("：（必须有而且只有一个）将数据存储与索引放到了一块，索引结构的叶子节点保存了行数据；")]),s._v(" "),t("ul",[t("li",[s._v("如果存在主键，主键索引就是聚集索引。")]),s._v(" "),t("li",[s._v("如果不存在主键，将使用第一个唯一(UNIQUE)索引作为聚集索引。")]),s._v(" "),t("li",[s._v("如果表没有主键，或没有合适的唯一索引，则InnoDB会自动生成一个rowid作为隐藏的聚集索引。")])]),s._v(" "),t("p",[t("strong",[s._v("二级索引")]),s._v("：（可以存在多个）将数据与索引分开存储，索引结构的叶子节点关联的是对应的主键；二级索引的叶节点仍然是索引节点，只不过有一个指针指向对应的数据块")]),s._v(" "),t("h2",{attrs:{id:"_7-覆盖索引、回表等这些-了解过吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_7-覆盖索引、回表等这些-了解过吗"}},[s._v("#")]),s._v(" 7 覆盖索引、回表等这些，了解过吗？")]),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("覆盖索引")]),s._v("：查询列要被所建的索引覆盖，不必从数据表中读取，换句话说查询列要被所使用的索引覆盖。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("回表")]),s._v("：二级索引无法直接查询所有列的数据，所以通过二级索引查询到聚集索引后，再查询到想要的数据，这种通过二级索引查询出来的过程，就叫做回表。")])])]),s._v(" "),t("h2",{attrs:{id:"_8-如何对索引进行优化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_8-如何对索引进行优化"}},[s._v("#")]),s._v(" 8 如何对索引进行优化？")]),s._v(" "),t("p",[s._v("对索引的优化其实最关键的就是要符合索引的设计原则和应用场景，将不符合要求的索引优化成符合索 引设计原则和应用场景的索引。除了索引的设计原则和应用场景那几点外，还可以从以下两方面考虑。")]),s._v(" "),t("ul",[t("li",[s._v("在进行查询时，索引列不能是表达式的一部分，也不能是函数的参数，因为这样无法使用索引。例如 "),t("code",[s._v("select * from table_name where a + 1 = 2")])]),s._v(" "),t("li",[s._v("将区分度最高的索引放在前面")]),s._v(" "),t("li",[s._v("尽量少使用"),t("code",[s._v("select*")])])]),s._v(" "),t("h2",{attrs:{id:"_9-非聚簇索引-二次索引-一定会回表查询吗"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_9-非聚簇索引-二次索引-一定会回表查询吗"}},[s._v("#")]),s._v(" 9 **非聚簇索引(二次索引)**一定会回表查询吗")]),s._v(" "),t("p",[s._v("不宜硬，这涉及到查询语句所要求的的字段是否全部命中了索引，如果全部命中了索引，那么就不必在进行回表查询了")]),s._v(" "),t("p",[s._v("例如：假设我们在员工表的年龄上建立了索引，那么当进行select age from employee where age < 20的查询时，在索引的叶子节点上，已经")]),s._v(" "),t("p",[s._v("包含了age 信息，不会再次进行回表查询")]),s._v(" "),t("h2",{attrs:{id:"_10-为什么使用b-🌲作为索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_10-为什么使用b-🌲作为索引"}},[s._v("#")]),s._v(" 10 为什么使用B+🌲作为索引")]),s._v(" "),t("p",[s._v("所以要对查找的方式进行优化，熟悉的二分查找，二叉树可以把速度提升到O(log(n,2))，查询的瓶颈在于树的深度，最坏的情况要查找到二叉树的最深层，由于，每查找深一层，就要访问更深一层的索引文件。在多达数G的索引文件中，这将是很大的开销。所以，尽量把数据结构设计的更为‘矮胖’一点就可以减少访问的层数。在众多的解决方案中，B树和B+树更合适，但是B+树的父节点也必须存在于子节点中，B+树的节点只存储索引key值，具体信息的地址存在于叶子节点的地址中。这就使以页为单位的索引中可以存放更多的节点。减少更多的I/O支出。因此，B+树成为了数据库比较优秀的数据结构")]),s._v(" "),t("h2",{attrs:{id:"_11-什么是hash索引-底层是什么"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_11-什么是hash索引-底层是什么"}},[s._v("#")]),s._v(" 11 什么是hash索引，底层是什么")]),s._v(" "),t("p",[t("code",[s._v("hash索引")]),s._v("也成为散列函数；利用hash算法实现，将键值换算成为hash值进行映射到对应的槽位，然后存储在hash表中")]),s._v(" "),t("p",[t("code",[s._v("hash冲突")]),s._v("如果两个（多个）键值，映射到同一个槽位上们就会产生hash冲突（也称之为hash碰撞），可以通过链表进行解决")]),s._v(" "),t("h2",{attrs:{id:"_12-hash-索引与-b-树索引的区别"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_12-hash-索引与-b-树索引的区别"}},[s._v("#")]),s._v(" 12 Hash 索引与 B+ 树索引的区别")]),s._v(" "),t("ul",[t("li",[s._v("Hash 索引不能进行范围查询，而 B+ 树可以。这是因为 Hash 索引指向的数据是无序的，而"),t("code",[s._v("B+")]),s._v("树的叶子节点是个有序的链表。")]),s._v(" "),t("li",[s._v("Hash 索引不支持联合索引的最左侧原则（即联合索引的部分索引无法使用），而 B+ 树可以。对 于联合索引来说，Hash 索引在计算 Hash 值的时候是将索引键合并后再一起计算 Hash 值，所以 不会针对每个索引单独计算 Hash 值。因此如果用到联合索引的一个或者几个索引时，联合索引无 法被利用。")]),s._v(" "),t("li",[s._v("Hash 索引不支持 ORDER BY 排序，因为 Hash 索引指向的数据是无序的，因此无法起到排序优化的作用，而 B+ 树索引数据是有序的，可以起到对该字段 ORDER BY 排序优化的作用。同理，我 们也无法用 Hash 索引进行模糊查询，而 B+ 树使用 LIKE 进行模糊查询的时候，LIKE 后面前模糊 查询（比如 % 开头）的话就可以起到优化作用。")])]),s._v(" "),t("p",[s._v("对于等值查询hash索引的效率更好，不过也存在一种情况就是hash冲突的情况，这样的话效率会变低；所以，Hash 索引通常不会用到重复值多的列上，比如列为性别、年龄的情况等。")]),s._v(" "),t("h2",{attrs:{id:"_13-mysql数据库什么情况下设置了索引但无法使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_13-mysql数据库什么情况下设置了索引但无法使用"}},[s._v("#")]),s._v(" 13 MySQL数据库什么情况下设置了索引但无法使用？")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("在索引列上进行运算操作，")])]),s._v(" "),t("li",[t("p",[s._v("对字符串进行查询的时候不增加 单引号")])]),s._v(" "),t("li",[t("p",[s._v("模糊查询如果仅仅尾部模糊匹配，索引不会失效，如果头部匹配索引失效")])]),s._v(" "),t("li",[t("p",[s._v("or分割的条件，如果or前面条件有索引，而后面的列没有索引，那么涉及的索引都不会被用到")]),s._v(" "),t("p",[s._v("要想使用or，又想让索引生效，只能将or条件中的每个列都加上索引")])]),s._v(" "),t("li",[t("p",[s._v("对于多列索引，不是使用的第一部分，则不会使用索引")])]),s._v(" "),t("li",[t("p",[s._v("如果mysql估计使用全表扫描要比使用索引快,则不使用索引")])])]),s._v(" "),t("h2",{attrs:{id:"_14-如何查看mysql有没有用到索引"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_14-如何查看mysql有没有用到索引"}},[s._v("#")]),s._v(" 14 如何查看mysql有没有用到索引")]),s._v(" "),t("p",[s._v("通过 explain，如以下例子：")]),s._v(" "),t("div",{staticClass:"language-sql line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sql"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPLAIN")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" user_gender "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("where")]),s._v(" user_gender "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/202205161555478.png",alt:"image-20220516155503328"}}),s._v(" "),t("ul",[t("li",[t("p",[t("strong",[s._v("Id")])]),s._v(" "),t("p",[s._v("selecti查询的序列号，表示查询中执行select子句或者是操作表的顺序(id相同，执行顺序从上到下；id不同，值越大，越先执行)。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("select type")]),s._v("\n表示"),t("code",[s._v("SELECT")]),s._v("的类型，常见的取值有"),t("code",[s._v("SIMPLE")]),s._v("(简单表，即不使用表连接或者子查询)、"),t("code",[s._v("PRIMARY")]),s._v("(主查询，即外层的查询)、"),t("code",[s._v("UNION")]),s._v("(UNION中的第二个或者后面的查询语句)、"),t("code",[s._v("SUBQUERY")]),s._v("(SELECT,/WHERE,之后包含了子查询)等")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("type")]),s._v("(最重要的)\n表示连接类型，性能由好到差的连接类型为NULL、system、const（唯一索引）、eq_ref（非唯一性索引）、ref、range、index、all（全表扫描）。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("possible key")]),s._v("\n显示可能应用在这张表上的索引，一个或多个。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Key")]),s._v("\n实际使用的索引，如果为NULL,则没有使用索引。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("Key_len")]),s._v("\n表示索引中使用的字节数，该值为索引字段最大可能长度，并非实际使用长度，在不损失精确性的前提下，长度越短越好。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("rows")]),s._v("\nMySQL认为必须要执行查询的行数，在innodb引擎的表中，是一个估计值，可能并不总是准确的。")])]),s._v(" "),t("li",[t("p",[t("strong",[s._v("filtered")]),s._v("\n表示返回结果的行数占需读取行数的百分比，filtered的值越大越好。")])])])])}),[],!1,null,null,null);a.default=r.exports}}]);