(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{618:function(t,_,v){"use strict";v.r(_);var r=v(10),e=Object(r.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h2",{attrs:{id:"_1-http-与-https-的区别"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_1-http-与-https-的区别"}},[t._v("#")]),t._v(" 1. HTTP 与 HTTPS 的区别")]),t._v(" "),v("ul",[v("li",[t._v("HTTP超文本传输协议，信息是明文传输，HTTPS 通过 SSL\\TLS 进行了加密")]),t._v(" "),v("li",[t._v("HTTP，HTTPS用的是完全不同的连接方式，HTTP 的端口号是 80，HTTPS 是 443")]),t._v(" "),v("li",[t._v("HTTPS 需要到 CA 申请证书，一般免费证书很少，需要交费")]),t._v(" "),v("li",[t._v("HTTPS 的连接很简单，是无状态的；HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议，比 HTTP 协议安全")])]),t._v(" "),v("h2",{attrs:{id:"_2-https-解决了-http-的哪些问题"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-https-解决了-http-的哪些问题"}},[t._v("#")]),t._v(" 2. HTTPS 解决了 HTTP 的哪些问题？")]),t._v(" "),v("p",[t._v("HTTP 由于是明文传输，所以安全上存在以下三个风险：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("窃听风险")]),t._v("，比如通信链路上可以获取通信内容，用户号容易没。")]),t._v(" "),v("li",[v("strong",[t._v("篡改风险")]),t._v("，比如强制植入垃圾广告，视觉污染，用户眼容易瞎。")]),t._v(" "),v("li",[v("strong",[t._v("冒充风险")]),t._v("，比如冒充淘宝网站，用户钱容易没。")])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/202205251513805.png",alt:"https解决的问题"}})]),t._v(" "),v("p",[t._v("HTTPS 在 HTTP 与 TCP 层之间加入了 "),v("code",[t._v("SSL/TLS")]),t._v(" 协议，可以很好的解决了上述的风险：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("信息加密")]),t._v("：交互信息无法被窃取，但你的号会因为「自身忘记」账号而没。")]),t._v(" "),v("li",[v("strong",[t._v("校验机制")]),t._v("：无法篡改通信内容，篡改了就不能正常显示，但百度「竞价排名」依然可以搜索垃圾广告。")]),t._v(" "),v("li",[v("strong",[t._v("身份证书")]),t._v("：证明淘宝是真的淘宝网，但你的钱还是会因为「剁手」而没。")])]),t._v(" "),v("h3",{attrs:{id:"_2-1-https-是如何解决上面的三个风险的"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-https-是如何解决上面的三个风险的"}},[t._v("#")]),t._v(" 2.1 HTTPS 是如何解决上面的三个风险的？")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("混合加密")]),t._v("的方式实现信息的"),v("strong",[t._v("机密性")]),t._v("，解决了窃听的风险。")]),t._v(" "),v("li",[v("strong",[t._v("摘要算法")]),t._v("的方式来实现"),v("strong",[t._v("完整性")]),t._v("，它能够为数据生成独一无二的「指纹」，指纹用于校验数据的完整性，解决了篡改的风险。")]),t._v(" "),v("li",[t._v("将服务器公钥放入到"),v("strong",[t._v("数字证书")]),t._v("中，解决了冒充的风险。")])]),t._v(" "),v("ol",[v("li",[v("p",[v("em",[v("strong",[t._v("混合加密")])])]),t._v(" "),v("p",[t._v("通过"),v("strong",[t._v("混合加密")]),t._v("的方式可以保证信息的"),v("strong",[t._v("机密性")]),t._v("，解决了窃听的风险。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/202205251518497.png",alt:"混合加密"}})]),t._v(" "),v("p",[t._v("HTTPS 采用的是对称加密和非对称加密结合的「混合加密」方式：")]),t._v(" "),v("ul",[v("li",[v("p",[t._v("在通信建立前采用"),v("strong",[t._v("非对称加密")]),t._v("的方式交换「会话秘钥」，后续就不再使用非对称加密。")]),t._v(" "),v("blockquote",[v("ol",[v("li",[t._v("客户端向服务器端发起SSL连接请求；")]),t._v(" "),v("li",[t._v("服务器把公钥发送给客户端，并且服务器端保存着唯一的私钥")])])])]),t._v(" "),v("li",[v("p",[t._v("在通信过程中全部使用"),v("strong",[t._v("对称加密")]),t._v("的「会话秘钥」的方式加密明文数据。")]),t._v(" "),v("blockquote",[v("p",[t._v("客户端用公钥对双方通信的对称秘钥进行加密，并发送给服务器端")])])])]),t._v(" "),v("p",[t._v("采用「混合加密」的方式的原因：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("对称加密")]),t._v("只使用一个密钥，运算速度快，密钥必须保密，无法做到安全的密钥交换。")]),t._v(" "),v("li",[v("strong",[t._v("非对称加密")]),t._v("使用两个密钥：公钥和私钥，公钥可以任意分发而私钥保密，解决了密钥交换问题但速度慢。")])])]),t._v(" "),v("li",[v("p",[v("em",[v("strong",[t._v("摘要算法")])])]),t._v(" "),v("p",[v("strong",[t._v("摘要算法")]),t._v("用来实现"),v("strong",[t._v("完整性")]),t._v("，能够为数据生成独一无二的「指纹」，用于校验数据的完整性，解决了篡改的风险。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/202205251553332.png",alt:"摘要算法"}}),t._v("\n客户端在发送明文之前会通过摘要算法算出明文的「指纹」，发送的时候把「指纹 + 明文」一同加密成密文后，发送给服务器，服务器解密后，用相同的摘要算法算出发送过来的明文，通过比较客户端携带的「指纹」和当前算出的「指纹」做比较，若「指纹」相同，说明数据是完整的。")])]),t._v(" "),v("li",[v("p",[v("em",[v("strong",[t._v("数字证书")])])]),t._v(" "),v("p",[t._v("客户端先向服务器端索要公钥，然后用公钥加密信息，服务器收到密文后，用自己的私钥解密。这就存在些问题，如何保证公钥不被篡改和信任度？")]),t._v(" "),v("p",[t._v("所以这里就需要借助第三方权威机构 "),v("code",[t._v("CA")]),t._v(" （数字证书认证机构），将"),v("strong",[t._v("服务器公钥放在数字证书")]),t._v("（由数字证书认证机构颁发）中，只要证书是可信的，公钥就是可信的。")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/202205251602639.png",alt:"数字证书"}})])])]),t._v(" "),v("h3",{attrs:{id:"_2-2-https-是如何建立连接的-其间交互了什么"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-https-是如何建立连接的-其间交互了什么"}},[t._v("#")]),t._v(" 2.2 HTTPS 是如何建立连接的？其间交互了什么？")]),t._v(" "),v("h4",{attrs:{id:"ssl-tls-协议基本流程"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#ssl-tls-协议基本流程"}},[t._v("#")]),t._v(" SSL/TLS 协议基本流程：")]),t._v(" "),v("ol",[v("li",[t._v("客户端向服务器索要并验证服务器的公钥。")]),t._v(" "),v("li",[t._v("双方协商生产「会话秘钥」。")])]),t._v(" "),v("blockquote",[v("p",[t._v("密匙交换的算法：")]),t._v(" "),v("ul",[v("li",[v("p",[v("a",{attrs:{href:"https://xiaolincoding.com/network/2_http/https_rsa.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("RSA"),v("OutboundLink")],1)])]),t._v(" "),v("li",[v("p",[v("a",{attrs:{href:"https://xiaolincoding.com/network/2_http/https_ecdhe.html#%E7%A6%BB%E6%95%A3%E5%AF%B9%E6%95%B0",target:"_blank",rel:"noopener noreferrer"}},[t._v("ECDHE"),v("OutboundLink")],1)])])])]),t._v(" "),v("ol",{attrs:{start:"3"}},[v("li",[t._v("双方采用「会话秘钥」进行加密通信。")])]),t._v(" "),v("ul",[v("li",[t._v("对称加密算法")])]),t._v(" "),v("p",[t._v("前两步也就是 SSL/TLS 的建立过程，也就是 TLS 握手阶段。")]),t._v(" "),v("p",[t._v("SSL/TLS 的「握手阶段」涉及"),v("strong",[t._v("四次")]),t._v("通信，可见下图：")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/HTTP/23-HTTPS%E5%B7%A5%E4%BD%9C%E6%B5%81%E7%A8%8B.png",alt:"ssl四次通信"}})]),t._v(" "),v("p",[t._v("SSL/TLS 协议建立的详细流程：")]),t._v(" "),v("p",[v("em",[v("strong",[t._v("1. ClientHello")])])]),t._v(" "),v("p",[t._v("首先，由客户端向服务器发起加密通信请求，也就是 "),v("code",[t._v("ClientHello")]),t._v(" 请求。")]),t._v(" "),v("p",[t._v("在这一步，客户端主要向服务器发送以下信息：")]),t._v(" "),v("p",[t._v("（1）客户端支持的 SSL/TLS 协议版本，如 TLS 1.2 版本。")]),t._v(" "),v("p",[t._v("（2）客户端生产的随机数（"),v("code",[t._v("Client Random")]),t._v("），后面用于生成「会话秘钥」条件之一。")]),t._v(" "),v("p",[t._v("（3）客户端支持的密码套件列表，如 RSA 加密算法。")]),t._v(" "),v("p",[v("em",[v("strong",[t._v("2. SeverHello")])])]),t._v(" "),v("p",[t._v("服务器收到客户端请求后，向客户端发出响应，也就是 "),v("code",[t._v("SeverHello")]),t._v("。服务器回应的内容有如下内容：")]),t._v(" "),v("p",[t._v("（1）确认 SSL/ TLS 协议版本，如果浏览器不支持，则关闭加密通信。")]),t._v(" "),v("p",[t._v("（2）服务器生产的随机数（"),v("code",[t._v("Server Random")]),t._v("），也是后面用于生产「会话秘钥」条件之一。")]),t._v(" "),v("p",[t._v("（3）确认的密码套件列表，如 RSA 加密算法。")]),t._v(" "),v("p",[t._v("（4）服务器的数字证书。")]),t._v(" "),v("p",[v("em",[v("strong",[t._v("3.客户端回应")])])]),t._v(" "),v("p",[t._v("客户端收到服务器的回应之后，首先通过浏览器或者操作系统中的 CA 公钥，确认服务器的数字证书的真实性。")]),t._v(" "),v("p",[t._v("如果证书没有问题，客户端会"),v("strong",[t._v("从数字证书中取出服务器的公钥")]),t._v("，然后使用它加密报文，向服务器发送如下信息：")]),t._v(" "),v("p",[t._v("（1）一个随机数（"),v("code",[t._v("pre-master key")]),t._v("）。该随机数会被服务器公钥加密。")]),t._v(" "),v("p",[t._v("（2）加密通信算法改变通知，表示随后的信息都将用「会话秘钥」加密通信。")]),t._v(" "),v("p",[t._v("（3）客户端握手结束通知，表示客户端的握手阶段已经结束。这一项同时把之前所有内容的发生的数据做个摘要，用来供服务端校验。")]),t._v(" "),v("p",[t._v("上面第一项的随机数是整个握手阶段的第三个随机数，会发给服务端，所以这个随机数客户端和服务端都是一样的。")]),t._v(" "),v("p",[v("strong",[t._v("服务器和客户端有了这三个随机数（Client Random、Server Random、pre-master key），接着就用双方协商的加密算法，各自生成本次通信的「会话秘钥」")]),t._v("。")]),t._v(" "),v("p",[v("em",[v("strong",[t._v("4. 服务器的最后回应")])])]),t._v(" "),v("p",[t._v("服务器收到客户端的第三个随机数（"),v("code",[t._v("pre-master key")]),t._v("）之后，通过协商的加密算法，计算出本次通信的「会话秘钥」。")]),t._v(" "),v("p",[t._v("然后，向客户端发送最后的信息：")]),t._v(" "),v("p",[t._v("（1）加密通信算法改变通知，表示随后的信息都将用「会话秘钥」加密通信。")]),t._v(" "),v("p",[t._v("（2）服务器握手结束通知，表示服务器的握手阶段已经结束。这一项同时把之前所有内容的发生的数据做个摘要，用来供客户端校验。")]),t._v(" "),v("p",[t._v("至此，整个 SSL/TLS 的握手阶段全部结束。接下来，客户端与服务器进入加密通信，就完全是使用普通的 HTTP 协议，只不过用「会话秘钥」加密内容。")]),t._v(" "),v("blockquote",[v("p",[t._v("最后的最后"),v("a",{attrs:{href:"https://xiaolincoding.com/network/2_http/https_optimize.html#%E5%88%86%E6%9E%90%E6%80%A7%E8%83%BD%E6%8D%9F%E8%80%97",target:"_blank",rel:"noopener noreferrer"}},[t._v("如何优化https"),v("OutboundLink")],1)])]),t._v(" "),v("p",[v("img",{attrs:{src:"https://cdn.xiaolincoding.com/gh/xiaolincoder/ImageHost4@main/%E7%BD%91%E7%BB%9C/https%E4%BC%98%E5%8C%96/%E4%BC%98%E5%8C%96https%E6%8F%90%E7%BA%B2.png",alt:"性能"}})]),t._v(" "),v("details",{staticClass:"custom-block details"},[v("summary",[t._v("See More")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://juejin.cn/post/6844903599303032845",target:"_blank",rel:"noopener noreferrer"}},[t._v("分分钟让你理解https"),v("OutboundLink")],1)]),t._v(" "),v("p",[v("a",{attrs:{href:"https://mp.weixin.qq.com/s/StqqafHePlBkWAPQZg3NrA",target:"_blank",rel:"noopener noreferrer"}},[t._v("一个故事说明白https"),v("OutboundLink")],1)]),t._v(" "),v("p",[v("a",{attrs:{href:"https://xiaolincoding.com/network/2_http/http_interview.html#https-%E8%A7%A3%E5%86%B3%E4%BA%86-http-%E7%9A%84%E5%93%AA%E4%BA%9B%E9%97%AE%E9%A2%98",target:"_blank",rel:"noopener noreferrer"}},[t._v("http常问的问题"),v("OutboundLink")],1),t._v("、")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://xiaolincoding.com/network/2_http/https_ecdhe.html#%E7%A6%BB%E6%95%A3%E5%AF%B9%E6%95%B0",target:"_blank",rel:"noopener noreferrer"}},[t._v("ECDHE"),v("OutboundLink")],1)])])])}),[],!1,null,null,null);_.default=e.exports}}]);