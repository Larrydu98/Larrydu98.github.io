(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{597:function(t,s,a){"use strict";a.r(s);var n=a(10),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("ECMAScript 6.0（以下简称 ES6）是 JavaScript 语言的下一代标准，已经在 2015 年 6 月正式发布了。它的目标，是使得 JavaScript语言可以用来编写复杂的大型应用程序，成为企业级开发语言。")]),t._v(" "),a("h2",{attrs:{id:"_1-可以解释一下-es5-和es6的区别吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-可以解释一下-es5-和es6的区别吗"}},[t._v("#")]),t._v(" 1. 可以解释一下 "),a("code",[t._v("ES5")]),t._v(" 和"),a("code",[t._v("ES6")]),t._v("的区别吗?")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("ECMAScript 5 (ES5)")]),t._v("：ECMAScript 的第五版，于2009年标准化，该标准已在所有现代浏览器中完全支持。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("ECMAScript 6 (ES6)/ ECMAScript 2015 (ES2015)")]),t._v(": ECMAscript 第 6 版，2015 年标准化。这个标准已经在大多数现代浏览器中部分实现。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("主要区别：")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("箭头函数和字符串插值")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("块级作用域：")]),a("code",[t._v("let")]),t._v(", "),a("code",[t._v("const")]),t._v(" 会创建块级作用域，不会像 "),a("code",[t._v("var")]),t._v(" 声明变量一样会被提升。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("默认参数")]),t._v("：默认参数使咱们可以使用默认值初始化函数。当参数省略或 "),a("code",[t._v("undefined")]),t._v(" 时使用默认参数值。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiply")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("multiply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 10    ")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("**类定义与继承：**ES6 引入了对类("),a("code",[t._v("class")]),t._v("关键字)、构造函数("),a("code",[t._v("constructor")]),t._v("关键字)和 "),a("code",[t._v("extend")]),t._v(" 关键字(用于继承)的语言支持。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("for-of 运算符")]),t._v("：创建一个遍历可迭代对象的循环。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Promises")]),t._v(": Promises 提供了一种机制来处理异步操作的结果和错误。可以使用回调来完成相同的事情，但是"),a("code",[t._v("Promises")]),t._v(" 通过方法链接和简洁的错误处理来提高可读性。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("模块导出和导入")])])])])])]),t._v(" "),a("h2",{attrs:{id:"_2-babel是什么-有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-babel是什么-有什么作用"}},[t._v("#")]),t._v(" 2. babel是什么，有什么作用?")]),t._v(" "),a("p",[t._v("babel是一个 ES6 转码器，可以将 ES6 代码转为 ES5 代码，以便兼容那些还没支持ES6的平台。")]),t._v(" "),a("h2",{attrs:{id:"_3-var、let、const之间的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-var、let、const之间的区别"}},[t._v("#")]),t._v(" 3. var、let、const之间的区别")]),t._v(" "),a("h3",{attrs:{id:"var"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#var"}},[t._v("#")]),t._v(" var")]),t._v(" "),a("ul",[a("li",[t._v("声明的全局变量挂载在window对象下")]),t._v(" "),a("li",[t._v("变量提升")]),t._v(" "),a("li",[t._v("声明变量可以重复声明")])]),t._v(" "),a("h3",{attrs:{id:"let和const"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#let和const"}},[t._v("#")]),t._v(" let和const")]),t._v(" "),a("ul",[a("li",[t._v("let和const声明的全局变量不挂载在window对象下")]),t._v(" "),a("li",[t._v("let/const有暂存死区**，在声明的"),a("strong",[t._v("上面访问变量会报错")])]),t._v(" "),a("li",[t._v("let 和 const 是JS中的块级作用域")]),t._v(" "),a("li",[t._v("let 和 const 不允许重复声明(会抛出错误)")]),t._v(" "),a("li",[t._v("const 声明一个只读的常量。一旦声明，常量的值就不能改变(如果声明是一个对象，那么不能改变的是对象的引用地址)")])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("在 ES6 中，"),a("code",[t._v("let")]),t._v(" 和"),a("code",[t._v("const")]),t._v(" 跟 "),a("code",[t._v("var")]),t._v("、"),a("code",[t._v("class")]),t._v("和"),a("code",[t._v("function")]),t._v("一样也会被提升，只是在进入作用域和被声明之间有一段时间不能访问它们，这段时间是"),a("strong",[t._v("临时死区(TDZ)")]),t._v("。")])]),a("h2",{attrs:{id:"解构复制的作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解构复制的作用"}},[t._v("#")]),t._v(" 解构复制的作用")]),t._v(" "),a("p",[a("strong",[t._v("解构赋值")]),t._v("是对赋值运算符的扩展，他是一种针对数组或者对象进行模式匹配，然后对其中的变量进行赋值")]),t._v(" "),a("p",[t._v("ES6 允许按照一定模式，从数组和对象中提取值，对变量进行赋值，这被称为"),a("strong",[t._v("解构")])]),t._v(" "),a("h3",{attrs:{id:"解构复制的应用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解构复制的应用"}},[t._v("#")]),t._v(" 解构复制的应用")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("浅克隆与合并")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//obj")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"aaa"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" age "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("age")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'bbb'")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" person "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("age "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//array")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" a "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" b "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("5")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" c "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("Json数据提取")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" JsonData "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("id")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("status")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"OK"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("222")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" status"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("data")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" numbers "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" JsonData"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("函数参数定义")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数有序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" c"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数无序")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" z"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("z")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("x")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("y")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 参数有默认值")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\nconsole"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"_4-举一些es6对string字符串类型做的常用升级优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-举一些es6对string字符串类型做的常用升级优化"}},[t._v("#")]),t._v(" 4. 举一些ES6对String字符串类型做的常用升级优化?")]),t._v(" "),a("h5",{attrs:{id:"_1、优化部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、优化部分"}},[t._v("#")]),t._v(" 1、优化部分：")]),t._v(" "),a("p",[t._v("ES6新增了"),a("strong",[t._v("字符串模板")]),t._v("，在拼接大段字符串时，用反斜杠(`)取代以往的字符串相加的形式，能保留所有空格和换行，使得字符串拼接看起来更加直观，更加优雅。")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("`熊哥喜欢吃${value1}，还喜欢吃${value2}`\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("h5",{attrs:{id:"_2、升级部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、升级部分"}},[t._v("#")]),t._v(" 2、升级部分:")]),t._v(" "),a("p",[t._v("ES6在String原型上新增了**includes()**方法，用于取代传统的只能用indexOf查找包含字符的方法(indexOf返回-1表示没查到不如includes方法返回false更明确，语义更清晰), 此外还新增了startsWith(), endsWith(), padStart(),padEnd(),repeat()等方法，可方便的用于查找，补全字符串。")]),t._v(" "),a("h2",{attrs:{id:"_5-举一些es6对array数组类型做的常用升级优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-举一些es6对array数组类型做的常用升级优化"}},[t._v("#")]),t._v(" 5. 举一些ES6对Array数组类型做的常用升级优化?")]),t._v(" "),a("h5",{attrs:{id:"_1、优化部分-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、优化部分-2"}},[t._v("#")]),t._v(" 1、优化部分")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("数组解构赋值")]),t._v("。ES6可以直接以"),a("code",[t._v("let [a,b,c] = [1,2,3]")]),t._v("形式进行变量赋值，")]),t._v(" "),a("li",[t._v("扩展运算符。ES6新增的扩展运算符(...)(重要),可以轻松的实现数组和松散序列的相互转化，可以取代arguments对象和apply方法，轻松获取未知参数个数情况下的参数集合。"),a("code",[t._v("let a = [2,3,4]; let b = [...a]")])])]),t._v(" "),a("h5",{attrs:{id:"_2、升级部分-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、升级部分-2"}},[t._v("#")]),t._v(" 2、升级部分")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("ES6在Array原型上新增了find()方法，用于取代传统的只能用"),a("code",[t._v("indexOf")]),t._v("查找包含数组项目的方法,")])]),t._v(" "),a("li",[a("p",[t._v("且修复了indexOf查找不到NaN的bug("),a("code",[t._v("[NaN].indexOf(NaN) === -1")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("此外还新增了copyWithin(), includes(), fill(),flat()等方法，可方便的用于字符串的查找，补全,转换等。")])])]),t._v(" "),a("h2",{attrs:{id:"_6-举一些es6对number数字类型做的常用升级优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-举一些es6对number数字类型做的常用升级优化"}},[t._v("#")]),t._v(" 6. 举一些ES6对Number数字类型做的常用升级优化?")]),t._v(" "),a("h5",{attrs:{id:"_1、优化部分-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、优化部分-3"}},[t._v("#")]),t._v(" 1、优化部分：")]),t._v(" "),a("p",[t._v("ES6在Number原型上新增了isFinite(), isNaN()方法，用来取代传统的全局"),a("code",[t._v("isFinite(), isNaN()")]),t._v("方法检测数值是否有限、是否是NaN。"),a("strong",[t._v("ES5的")]),a("code",[t._v("isFinite()")]),t._v(", "),a("code",[t._v("isNaN()")]),t._v("方法都会"),a("strong",[t._v("先将非数值类型的参数转化为"),a("code",[t._v("Number")]),t._v("类型再做判断")]),t._v("，这其实是不合理的，最造成"),a("code",[t._v("isNaN('NaN') === true")]),t._v("的奇怪行为--'NaN'是一个字符串，但是"),a("code",[t._v("isNaN")]),t._v("却说这就是NaN。")]),t._v(" "),a("h5",{attrs:{id:"_2、升级部分-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、升级部分-3"}},[t._v("#")]),t._v(" 2、升级部分:")]),t._v(" "),a("p",[t._v("ES6在Math对象上新增了"),a("code",[t._v("Math.cbrt()")]),t._v("，"),a("code",[t._v("trunc()")]),t._v("，"),a("code",[t._v("hypot()")]),t._v("等等较多的科学计数法运算方法，可以更加全面的进行立方根、求和立方根等等科学计算。")]),t._v(" "),a("p",[a("strong",[t._v("ES6")]),t._v("而"),a("strong",[t._v("Number.isFinite()和Number.isNaN()则不会有此类问题")]),t._v("("),a("code",[t._v("Number.isNaN('NaN') === false")]),t._v(")。（isFinite()同上）")]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[t._v("使用箭头函数应注意什么？")])]),t._v(" "),a("li",[a("p",[t._v("箭头函数不会创建自己的this，箭头函数的this是通过捕获自己定义时所处的外层执行环境this。")])]),t._v(" "),a("li",[a("p",[t._v("箭头函数的this执行是永远不变的")])]),t._v(" "),a("li",[a("p",[t._v("不能用作构造函数，这就是说不能够使用new命令，否则会抛出一个错误")])]),t._v(" "),a("li",[a("p",[t._v("箭头函数没有自己滴arguments属性")])]),t._v(" "),a("li",[a("p",[t._v("箭头函数没有原型prototype")])]),t._v(" "),a("li",[a("p",[t._v("箭头函数不能作为Generator函数，不能使用yeild关键字")])])]),t._v(" "),a("h2",{attrs:{id:"_7、问-举一些es6对object类型做的常用升级优化-important"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、问-举一些es6对object类型做的常用升级优化-important"}},[t._v("#")]),t._v(" 7、问：举一些ES6对Object类型做的常用升级优化?(important!!!)")]),t._v(" "),a("h5",{attrs:{id:"_1、优化部分-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、优化部分-4"}},[t._v("#")]),t._v(" 1、优化部分：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("对象属性变量式声明。ES6可以直接以变量形式声明对象属性或者方法，。比传统的键值对形式声明更加简洁，更加方便，语义更加清晰。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red appe'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yellow orange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" myFruits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// let myFruits = {apple: 'red appe', orange: 'yellow orange'};")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("可以看到属性变量式声明属性看起来更加简洁明了。方法也可以采用简洁写法：")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" es5Fun "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" es6Fun "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("method")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("对象的解构赋值。 ES6对象也可以像数组解构赋值那样，进行变量的解构赋值：")])])])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("apple")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red appe'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("orange")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yellow orange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[a("p",[t._v("对象的扩展运算符(...)。 ES6对象的扩展运算符和数组扩展运算符用法本质上差别不大，毕竟数组也就是特殊的对象。对象的扩展运算符一个最常用也最好用的用处就在于可以轻松的取出一个"),a("strong",[t._v("目标对象内部全部或者部分的可遍历属性")]),t._v("，从而进行对象的合并和分解。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("otherFruits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("apple")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'red apple'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("orange")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'yellow orange'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("grape")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'purple grape'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("peach")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'sweet peach'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// otherFruits  {grape: 'purple grape', peach: 'sweet peach'}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 注意: 对象的扩展运算符用在解构赋值时，扩展运算符只能用在最后一个参数(otherFruits后面不能再跟其他参数)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" moreFruits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("watermelon")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'nice watermelon'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" allFruits "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("apple"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" orange"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("otherFruits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("moreFruits"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("super")]),t._v(" 关键字。ES6在Class类里新增了类似this的关键字super。同this总是指向当前函数所在的对象不同，super关键字总是指向当前函数所在对象的原型对象。")])])]),t._v(" "),a("h5",{attrs:{id:"_2、-升级部分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、-升级部分"}},[t._v("#")]),t._v(" 2、 升级部分")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("ES6在Object原型上新增了is()方法，做两个目标对象的相等比较，用来完善'==='方法。'==='方法中"),a("code",[t._v("NaN === NaN //false")]),t._v("其实是不合理的，Object.is修复了这个小bug。("),a("code",[t._v("Object.is(NaN, NaN) // true")]),t._v(")")])]),t._v(" "),a("li",[a("p",[t._v("ES6在Object原型上新增了assign()方法，用于对象新增属性或者多个对象合并。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("a")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" source1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("b")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("2")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" source2 "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("c")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" source1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" source2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\ntarget "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// {a:1, b:2, c:3}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("注意")]),a("p",[t._v("assign合并的对象target只能合并source1、source2中的自身属性，并不会合并source1、source2中的继承属性，也不会合并不可枚举的属性，且无法正确复制get和set属性（会直接执行get/set函数，取return的值）。")])]),a("ul",[a("li",[t._v("ES6在Object原型上新增了"),a("code",[t._v("getOwnPropertyDescriptors()")]),t._v("方法，此方法增强了ES5中"),a("code",[t._v("getOwnPropertyDescriptor()")]),t._v("方法，可以获取指定对象所有自身属性的描述对象。结合"),a("code",[t._v("defineProperties()")]),t._v("方法，可以完美复制对象，包括复制get和set属性。")]),t._v(" "),a("li",[t._v("ES6在Object原型上新增了"),a("code",[t._v("getPrototypeOf()")]),t._v("和"),a("code",[t._v("setPrototypeOf()")]),t._v("方法，用来获取或设置当前对象的prototype对象。这个方法存在的意义在于，ES5中获取设置prototype对像是通过__proto__属性来实现的，然而__proto__属性并不是ES规范中的明文规定的属性,只是浏览器各大产商“私自”加上去的属性，只不过因为适用范围广而被默认使用了，再非浏览器环境中并不一定就可以使用，所以为了稳妥起见，获取或设置当前对象的prototype对象时，都应该采用ES6新增的标准用法。")]),t._v(" "),a("li",[t._v("ES6在Object原型上还新增了"),a("code",[t._v("Object.keys()")]),t._v("，"),a("code",[t._v("Object.values()")]),t._v("，"),a("code",[t._v("Object.entries()")]),t._v("方法，用来获取对象的所有键、所有值和所有键值对数组。")])]),t._v(" "),a("h2",{attrs:{id:"_8、举一些es6对function函数类型做的常用升级优化-important"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、举一些es6对function函数类型做的常用升级优化-important"}},[t._v("#")]),t._v(" 8、举一些ES6对Function函数类型做的常用升级优化?(important)")]),t._v(" "),a("h5",{attrs:{id:"_1、优化部分-5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、优化部分-5"}},[t._v("#")]),t._v(" 1、优化部分：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("箭头函数")]),t._v("(核心)。箭头函数是ES6核心的升级项之一，箭头函数里没有自己的this,这改变了以往JS函数中最让人难以理解的this运行机制。主要优化点:")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("箭头函数内的this指向的是函数定义时所在的对象，而不是函数执行时所在的对象")])]),t._v(" "),a("li",[t._v("箭头函数继承而来的this指向是永远不会改变的")]),t._v(" "),a("li",[t._v("箭头函数没有自己的"),a("strong",[t._v("arguments")])]),t._v(" "),a("li",[t._v("箭头海曙没有原型prototype")]),t._v(" "),a("li",[t._v("箭头函数不能做构造函数\n"),a("ul",[a("li",[t._v("箭头函数没有自己的this，他的this是继承于了外层执行环境中的this，且this指向永远不会随在哪里调用，被谁调用而改变，所以箭头函数不能作为构造函数使用")])])])])]),t._v(" "),a("li",[a("p",[t._v("函数默认赋值。ES6之前，函数的形参是无法给默认值得，只能在函数内部通过变通方法实现。ES6以更简洁更明确的方式进行函数默认赋值。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("es6Fuc")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'default'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("es6Fuc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 4, default")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])])]),t._v(" "),a("h5",{attrs:{id:"_2、升级部分-4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、升级部分-4"}},[t._v("#")]),t._v(" 2、升级部分：")]),t._v(" "),a("p",[t._v("ES6新增了双冒号运算符，用来取代以往的bind，call,和apply。(浏览器暂不支持，Babel已经支持转码)")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("bar"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("foo")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("...")]),t._v("arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 等同于")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("bar")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("foo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" arguments"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("h2",{attrs:{id:"_9、symbol是什么-有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_9、symbol是什么-有什么作用"}},[t._v("#")]),t._v(" 9、Symbol是什么，有什么作用？")]),t._v(" "),a("p",[t._v("Symbol是ES6引入的第七种数据类型，所有"),a("code",[t._v("Symbol()")]),t._v("生成的值都是独一无二的，可以从根本上解决对象属性太多导致属性名冲突覆盖的问题。对象中"),a("code",[t._v("Symbol()")]),t._v("属性"),a("strong",[t._v("不能被for...in遍历")]),t._v("，但是也不是"),a("strong",[t._v("私有属性。")])]),t._v(" "),a("h2",{attrs:{id:"_10、set是什么-有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_10、set是什么-有什么作用"}},[t._v("#")]),t._v(" 10、Set是什么，有什么作用？")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844904191610060814",target:"_blank",rel:"noopener noreferrer"}},[t._v("你真的了解ES6的Set，WeakSet，Map和WeakMap吗"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("Set是ES6引入的一种类似Array的新的数据结构，Set实例的成员类似于数组item成员，"),a("strong",[t._v("区别是Set实例的成员都是唯一，不重复的")]),t._v("。这个特性可以轻松地实现"),a("strong",[t._v("数组去重")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"set-的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-的属性"}},[t._v("#")]),t._v(" Set 的属性：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("size")]),t._v("：返回集合所包含元素的数量")])]),t._v(" "),a("h4",{attrs:{id:"set-实例对象的方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-实例对象的方法"}},[t._v("#")]),t._v(" Set 实例对象的方法")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Set/add",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Set.prototype.add(*value*)")]),a("OutboundLink")],1),t._v("（在"),a("code",[t._v("Set")]),t._v("对象尾部添加一个元素。返回该"),a("code",[t._v("Set")]),t._v("对象。）")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Set/has",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Set.prototype.has(*value*)")]),a("OutboundLink")],1),t._v("（返回一个布尔值，表示该值在"),a("code",[t._v("Set")]),t._v("中存在与否。）")]),t._v(" "),a("li",[a("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Set/delete",target:"_blank",rel:"noopener noreferrer"}},[a("code",[t._v("Set.prototype.delete(*value*)")]),a("OutboundLink")],1),t._v("（删除某数值，成功是true，否则是false）")]),t._v(" "),a("li",[a("code",[t._v("clear()")]),t._v("：清除所有成员，没有返回值。")])]),t._v(" "),a("h4",{attrs:{id:"遍历方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历方法"}},[t._v("#")]),t._v(" 遍历方法")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("keys()")]),t._v("：返回键名的遍历器。")]),t._v(" "),a("li",[a("code",[t._v("values()")]),t._v("：返回键值的遍历器。")]),t._v(" "),a("li",[a("code",[t._v("entries()")]),t._v("：返回键值对的遍历器。")]),t._v(" "),a("li",[a("code",[t._v("forEach()")]),t._v("：使用回调函数遍历每个成员。")])]),t._v(" "),a("p",[t._v("由于 "),a("code",[t._v("Set")]),t._v(" 结构没有键名，只有键值（或者说键名和键值是同一个值），所以 "),a("code",[t._v("keys")]),t._v(" 方法和 "),a("code",[t._v("values")]),t._v(" 方法的行为完全一致。")]),t._v(" "),a("h3",{attrs:{id:"weakset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakset"}},[t._v("#")]),t._v(" weakSet")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("成员都是弱引用，可以被垃圾回收机制回收，可以用来保存 DOM 节点，不容易造成内存泄漏。")])]),t._v(" "),a("li",[a("code",[t._v("WeakSet")]),t._v(" 不可迭代，因此不能被用在 "),a("code",[t._v("for-of")]),t._v(" 等循环中。")]),t._v(" "),a("li",[a("code",[t._v("WeakSet")]),t._v(" 没有 "),a("code",[t._v("size")]),t._v(" 属性。")])]),t._v(" "),a("h2",{attrs:{id:"_11、map是什么-有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_11、map是什么-有什么作用"}},[t._v("#")]),t._v(" 11、Map是什么，有什么作用？")]),t._v(" "),a("p",[t._v("Map是ES6引入的一种类似Object的新的数据结构，Map可以理解为是Object的超集，打破了以传统键值对形式定义对象，对象的key不再局限于字符串，也可以是Object。可以更加全面的描述对象的属性。")]),t._v(" "),a("h4",{attrs:{id:"map-和-object-的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#map-和-object-的区别"}},[t._v("#")]),t._v(" Map 和 Object 的区别")]),t._v(" "),a("p",[a("RouterLink",{attrs:{to:"/blogs/Front/JsAdvanced/JS面试的基本内容.html"}},[t._v("详细")])],1),t._v(" "),a("h4",{attrs:{id:"对象方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#对象方法"}},[t._v("#")]),t._v(" 对象方法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("set(key, val)")]),t._v(": 向 "),a("code",[t._v("Map")]),t._v(" 中添加新元素")]),t._v(" "),a("li",[a("code",[t._v("get(key)")]),t._v(": 通过键值查找特定的数值并返回")]),t._v(" "),a("li",[t._v("has(key)"),a("code",[t._v(": 判断")]),t._v("Map"),a("code",[t._v("对象中是否有")]),t._v("Key"),a("code",[t._v("所对应的值，有返回")]),t._v("true"),a("code",[t._v("，否则返回")]),t._v("false")]),t._v(" "),a("li",[a("code",[t._v("delete(key)")]),t._v(": 通过键值从 "),a("code",[t._v("Map")]),t._v(" 中移除对应的数据")]),t._v(" "),a("li",[a("code",[t._v("clear()")]),t._v(": 将这个 "),a("code",[t._v("Map")]),t._v(" 中的所有元素删除")])]),t._v(" "),a("h4",{attrs:{id:"遍历方法-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#遍历方法-2"}},[t._v("#")]),t._v(" 遍历方法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("keys()")]),t._v("：返回键名的遍历器")]),t._v(" "),a("li",[a("code",[t._v("values()")]),t._v("：返回键值的遍历器")]),t._v(" "),a("li",[a("code",[t._v("entries()")]),t._v("：返回键值对的遍历器")]),t._v(" "),a("li",[a("code",[t._v("forEach()")]),t._v("：使用回调函数遍历每个成员")])]),t._v(" "),a("h3",{attrs:{id:"weakmap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#weakmap"}},[t._v("#")]),t._v(" WeakMap")]),t._v(" "),a("p",[a("code",[t._v("WeakMap")]),t._v(" 结构与 "),a("code",[t._v("Map")]),t._v(" 结构类似，也是用于生成键值对的集合。")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("只接受对象作为键名")]),t._v("（"),a("code",[t._v("null")]),t._v(" 除外），不接受其他类型的值作为键名")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("键名是弱引用，键值可以是任意的，键名所指向的对象可以被垃圾回收，此时键名是无效的")])]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 2. 键名是弱引用，如果键名销毁，该属性就销毁 (IE打开)")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" weakmap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("WeakMap")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("num")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n weakmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("set")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("o"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n o "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("null")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("weakmap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("不能遍历，方法有 "),a("code",[t._v("get")]),t._v("、"),a("code",[t._v("set")]),t._v("、"),a("code",[t._v("has")]),t._v("、"),a("code",[t._v("delete")])])])]),t._v(" "),a("h2",{attrs:{id:"_12、proxy是什么-有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_12、proxy是什么-有什么作用"}},[t._v("#")]),t._v(" 12、Proxy是什么，有什么作用？")]),t._v(" "),a("p",[t._v("Proxy是ES6新增的一个构造函数，可以理解为JS语言的一个代理，用来改变JS默认的一些语言行为，包括拦截默认的get/set等底层方法，使得JS的使用自由度更高，可以最大限度的满足开发者的需求。比如通过拦截对象的get/set方法，可以轻松地定制自己想要的key或者value。")]),t._v(" "),a("h2",{attrs:{id:"_13、reflect是什么-有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_13、reflect是什么-有什么作用"}},[t._v("#")]),t._v(" 13、Reflect是什么，有什么作用？")]),t._v(" "),a("p",[t._v("Reflect是ES6引入的一个新的对象，他的主要作用有两点，一是将原生的一些零散分布在Object、Function或者全局函数里的方法(如apply、delete、get、set等等)，统一整合到Reflect上，这样可以更加方便更加统一的管理一些原生API。其次就是因为Proxy可以改写默认的原生API，如果一旦原生API别改写可能就找不到了，所以Reflect也可以起到备份原生API的作用，使得即使原生API被改写了之后，也可以在被改写之后的API用上默认的API。")]),t._v(" "),a("h2",{attrs:{id:"_14、-promise是什么-有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_14、-promise是什么-有什么作用"}},[t._v("#")]),t._v(" 14、 Promise是什么，有什么作用？")]),t._v(" "),a("p",[t._v("Promise是ES6引入的一个新的对象，他的主要作用是用来解决JS异步机制里，回调机制产生的“回调地狱”。它并不是什么突破性的API，只是封装了异步回调形式，使得异步回调可以写的更加优雅，可读性更高，而且可以链式调用。")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"}),a("p",[t._v("promise是同步的，但是promise.then是一个异步的")])]),a("h2",{attrs:{id:"_15、iterator是什么-有什么作用-important"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_15、iterator是什么-有什么作用-important"}},[t._v("#")]),t._v(" 15、Iterator是什么，有什么作用？(important！！！)")]),t._v(" "),a("p",[t._v("Iterator是ES6中一个很重要概念，它并不是对象，也不是任何一种数据类型。因为ES6新增了"),a("code",[t._v("Set")]),t._v("、"),a("code",[t._v("Map")]),t._v("类型，他们和"),a("code",[t._v("Array")]),t._v("、Object类型很像，Array、Object都是可以遍历的，但是Set、Map都不能用for循环遍历，解决这个问题有两种方案，")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("一种是为Set、Map单独新增一个用来遍历的API，")])]),t._v(" "),a("li",[a("p",[t._v("另一种是为Set、Map、Array、Object新增一个统一的遍历API")])])]),t._v(" "),a("p",[t._v("显然，"),a("strong",[t._v("第二种更好")]),t._v("，ES6也就顺其自然的需要一种设计标准，来统一所有可遍历类型的遍历方式。"),a("code",[t._v("Iterator")]),t._v("正是这样一种标准。或者说是一种规范理念。")]),t._v(" "),a("p",[t._v("默认具有Iterator的有")]),t._v(" "),a("ul",[a("li",[t._v("Array")]),t._v(" "),a("li",[t._v("Map")]),t._v(" "),a("li",[t._v("Set")]),t._v(" "),a("li",[t._v("String")]),t._v(" "),a("li",[t._v("TypedArray")]),t._v(" "),a("li",[t._v("函数的 arguments 对象")]),t._v(" "),a("li",[t._v("NodeList 对象")])]),t._v(" "),a("h2",{attrs:{id:"_16、for-in-和for-of有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_16、for-in-和for-of有什么区别"}},[t._v("#")]),t._v(" 16、for...in 和for...of有什么区别？")]),t._v(" "),a("p",[t._v("问题15提到了ES6统一了遍历标准，制定了可遍历对象，那么用什么方法去遍历呢？答案就是用"),a("code",[t._v("for...of")]),t._v("。")]),t._v(" "),a("p",[t._v("ES6规定，所有部署了载了"),a("code",[t._v("Iterator")]),t._v("接口的对象(可遍历对象)都可以通过for...of去遍历，")]),t._v(" "),a("ol",[a("li",[t._v("数组;")]),t._v(" "),a("li",[t._v("Set;")]),t._v(" "),a("li",[t._v("Map;")]),t._v(" "),a("li",[t._v("类数组对象，如 arguments 对象、DOM NodeList 对象;")]),t._v(" "),a("li",[t._v("Generator 对象;")]),t._v(" "),a("li",[t._v("字符串;")])]),t._v(" "),a("p",[a("strong",[t._v("for..in仅仅可以遍历对象和数组。")])]),t._v(" "),a("h2",{attrs:{id:"_17、generator函数是什么-有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_17、generator函数是什么-有什么作用"}},[t._v("#")]),t._v(" 17、Generator函数是什么，有什么作用？")]),t._v(" "),a("p",[t._v("如果说JavaScript是ECMAScript标准的一种具体实现、Iterator遍历器是Iterator的具体实现，那么Generator函数可以说是Iterator接口的具体实现方式。")]),t._v(" "),a("p",[t._v("执行Generator函数会返回一个遍历器对象，每一次Generator函数里面的yield都相当一次遍历器对象的next()方法，并且可以通过next(value)方法传入自定义的value,来改变Generator函数的行为。")]),t._v(" "),a("p",[t._v("Generator函数可以通过配合Thunk 函数更轻松更优雅的实现异步编程和控制流管理。")]),t._v(" "),a("h2",{attrs:{id:"_18、async函数是什么-有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_18、async函数是什么-有什么作用"}},[t._v("#")]),t._v(" 18、async函数是什么，有什么作用？")]),t._v(" "),a("p",[t._v("async函数可以理解为内置自动执行器的Generator函数语法糖，它配合ES6的Promise近乎完美的实现了异步编程解决方案。")]),t._v(" "),a("h2",{attrs:{id:"_19、class、extends是什么-有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_19、class、extends是什么-有什么作用"}},[t._v("#")]),t._v(" 19、Class、extends是什么，有什么作用？")]),t._v(" "),a("p",[t._v("ES6 的class可以看作"),a("strong",[t._v("只是一个ES5生成实例对象的构造函数的语法糖")]),t._v("。它参考了java语言，定义了一个类的概念，让对象原型写法更加清晰，对象实例化更像是一种面向对象编程。Class类可以通过extends实现继承。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("类的内部定义的所有方法，都是不可枚举的。")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("///ES5")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ES5Fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ES5Fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("toString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("', '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("var")]),t._v(" p "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ES5Fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\np"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ES5Fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//['toString']")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//ES6")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ES6Fun")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("constructor")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" y")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" x"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" y"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toString")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\t\t"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'('")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("x "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("', '")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("y "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("')'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\nObject"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("keys")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ES6Fun")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("prototype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//[]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("ES6的class类必须用new命令操作，而ES5的构造函数不用new也可以执行。")])]),t._v(" "),a("li",[a("p",[t._v("ES6的class类不存在变量提升，必须先定义class之后才能实例化，不像ES5中可以将构造函数写在实例化之后。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("ES5 的继承，实质是先创造子类的实例对象this，然后再将父类的方法添加到this上面")]),t._v("。ES6 的继承机制完全不同，实质是先将"),a("strong",[t._v("父类实例对象的属性和方法，加到this上面（所以必须先调用super方法")]),t._v("），然后再用子类的构造函数修改this。")])])]),t._v(" "),a("p",[t._v("详细[ES6 实现继承](../JS/6.JS重读【6】—— JavaScript中的面对对象.md)")]),t._v(" "),a("h2",{attrs:{id:"_20、module、export、import是什么-有什么作用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_20、module、export、import是什么-有什么作用"}},[t._v("#")]),t._v(" 20、module、export、import是什么，有什么作用？")]),t._v(" "),a("p",[t._v("module、export、import是ES6用来统一前端模块化方案的设计思路和实现方案。export、import的出现统一了前端模块化的实现方案，整合规范了浏览器/服务端的模块化方法，用来取代传统的AMD/CMD、requireJS、seaJS、commondJS等等一系列前端模块不同的实现方案，使前端模块化更加统一规范，JS也能更加能实现大型的应用程序开发。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("import引入的模块是静态加载（编译阶段加载）而不是动态加载（运行时加载）。")])]),t._v(" "),a("li",[a("p",[t._v("import引入export导出的接口值是动态绑定关系，即通过该接口，可以取到模块内部实时的值。")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);