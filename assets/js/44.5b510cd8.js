(window.webpackJsonp=window.webpackJsonp||[]).push([[44],{620:function(t,s,a){"use strict";a.r(s);var n=a(10),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("p",[t._v("输入URL到看见页面发生了什么？主要是经过了一下6个部分")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("url解析")])]),t._v(" "),a("li",[a("p",[t._v("DNS解析")])]),t._v(" "),a("li",[a("p",[t._v("发送TCP连接")])]),t._v(" "),a("li",[a("p",[t._v("发送HTTP请求")])]),t._v(" "),a("li",[a("p",[t._v("服务器处理请求并返回HTTP报文")])]),t._v(" "),a("li",[a("p",[t._v("浏览器解析渲染页面")])]),t._v(" "),a("li",[a("p",[t._v("连接结束")])])]),t._v(" "),a("h2",{attrs:{id:"url的解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url的解析"}},[t._v("#")]),t._v(" URL的解析")]),t._v(" "),a("p",[t._v("首先浏览器做的第一步工作就是要对 "),a("code",[t._v("URL")]),t._v(" 进行解析，从而生成发送给 "),a("code",[t._v("Web")]),t._v(" 服务器的请求信息。")]),t._v(" "),a("h3",{attrs:{id:"url构成"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#url构成"}},[t._v("#")]),t._v(" url构成")]),t._v(" "),a("p",[t._v("http://www.aspxfans.com:8080/news/index.asp?boardID=5&ID=24618&page=1#name")]),t._v(" "),a("ol",[a("li",[a("p",[t._v('协议部分：该URL的协议部分为“http：”，这代表网页使用的是HTTP协议。在Internet中可以使用多种协议，如HTTP，FTP、HTTPS等等本例中使用的是HTTP协议。在"HTTP"后面的“//”为分隔符')])]),t._v(" "),a("li",[a("p",[t._v("域名部分：该URL的域名部分为“www.aspxfans.com”。一个URL中，也可以使用IP地址作为域名使用")])]),t._v(" "),a("li",[a("p",[t._v("端口部分：跟在域名后面的是端口，域名和端口之间使用“:”作为分隔符。端口不是一个URL必须的部分，如果省略端口部分，将采用默认端口80")])]),t._v(" "),a("li",[a("p",[t._v("虚拟目录部分：从域名后的第一个“/”开始到最后一个“/”为止，是虚拟目录部分。"),a("strong",[t._v("虚拟目录也不是一个URL必须的部分")]),t._v("。本例中的虚拟目录是“/news/”")])]),t._v(" "),a("li",[a("p",[t._v("文件名部分：从域名后的最后一个“/”开始到“？”为止，是文件名部分，如果没有“?”,则是从域名后的最后一个“/”开始到“#”为止，是文件部分，如果没有“？”和“#”，那么从域名后的最后一个“/”开始到结束，都是文件名部分。本例中的文件名是“index.asp”。"),a("strong",[t._v("文件名部分也不是一个URL必须的部分")]),t._v("，如果省略该部分，则使用默认的文件名")])]),t._v(" "),a("li",[a("p",[t._v("锚部分：从“#”开始到最后，都是锚部分。本例中的锚部分是“name”。"),a("strong",[t._v("锚部分也不是一个URL必须的部分")])])]),t._v(" "),a("li",[a("p",[t._v("参数部分：从“？”开始到“#”为止之间的部分为参数部分，又称搜索部分、查询部分。本例中的参数部分为“boardID=5&ID=24618&page=1”。参数可以允许有多个参数，参数与参数之间用“&”作为分隔符。")])])]),t._v(" "),a("h2",{attrs:{id:"dns解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns解析"}},[t._v("#")]),t._v(" DNS解析")]),t._v(" "),a("p",[t._v("通过浏览器解析 URL 并生成 HTTP 消息后，需要委托操作系统将消息发送给 "),a("code",[t._v("Web")]),t._v(" 服务器。")]),t._v(" "),a("p",[t._v("DNS解析实际上"),a("strong",[t._v("查询服务器域名对应的IP 地址")]),t._v("，。假设你输入"),a("code",[t._v("www.baidu.com.")]),t._v("，而这个网址并不是百度的真实地址，互联网中每一台机器都有唯一标识的IP地址，这个才是关键，但是它不好记，乱七八糟一串数字谁记得住啊，所以就需要一个网址和IP地址的转换，也就是DNS解析。下面看看具体的解析过程。")]),t._v(" "),a("h3",{attrs:{id:"具体解析过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体解析过程"}},[t._v("#")]),t._v(" 具体解析过程")]),t._v(" "),a("ol",[a("li",[t._v("客户端首先会发出一个 DNS 请求，问 "),a("code",[t._v("www.server.com")]),t._v("的 IP 是啥，并发给"),a("strong",[t._v("本地 DNS 服务器")]),t._v("（也就是客户端的 TCP/IP 设置中填写的 DNS 服务器地址）。")]),t._v(" "),a("li",[t._v("本地域名服务器收到客户端的请求后，如果缓存里的表格能找到 "),a("code",[t._v("www.server.com")]),t._v("，则它直接返回 IP 地址。如果没有，本地 DNS 会去问它的根域名服务器：“老大， 能告诉我"),a("code",[t._v("www.server.com")]),t._v(" 的 IP 地址吗？” 根域名服务器是最高层次的，它不直接用于域名解析，但能指明一条道路。")]),t._v(" "),a("li",[t._v("根 DNS 收到来自本地 DNS 的请求后，发现后置是 .com，说"),a("code",[t._v("www.server.com")]),t._v(" 这个域名归 .com 区域管理”，我给你 .com 顶级域名服务器地址给你，你去问问它吧。”")]),t._v(" "),a("li",[t._v("本地 DNS 收到顶级域名服务器的地址后，发起请求问“老二， 你能告诉我 "),a("code",[t._v("www.server.com")]),t._v(" 的 IP 地址吗？”")]),t._v(" "),a("li",[t._v("顶级域名服务器说：“我给你负责 "),a("code",[t._v("www.server.com")]),t._v(" 区域的权威 DNS 服务器的地址，你去问它应该能问到”。")]),t._v(" "),a("li",[t._v("本地 DNS 于是转向问权威 DNS 服务器：“老三，"),a("code",[t._v("www.server.com")]),t._v("对应的IP是啥呀？” server.com 的权威 DNS 服务器，它是域名解析结果的原出处。为啥叫权威呢？就是我的域名我做主。")]),t._v(" "),a("li",[t._v("权威 DNS 服务器查询后将对应的 IP 地址 X.X.X.X 告诉本地 DNS。")]),t._v(" "),a("li",[t._v("本地 DNS 再将 IP 地址返回客户端，客户端和目标建立连接。")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://xiaolincoding.com/network/1_base/what_happen_url.html#%E7%9C%9F%E5%AE%9E%E5%9C%B0%E5%9D%80%E6%9F%A5%E8%AF%A2-dns",target:"_blank",rel:"noopener noreferrer"}},[t._v("真实的寻址过程-dns"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/202205251001806.jpg",alt:"image1"}})]),t._v(" "),a("h3",{attrs:{id:"dns优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns优化"}},[t._v("#")]),t._v(" DNS优化")]),t._v(" "),a("p",[t._v("上述的从"),a("strong",[t._v("根域名服务器")]),t._v("，到com顶级域名服务器直到"),a("strong",[t._v("主域名服务器")]),t._v("经历这么多过程，每个过程都耗费时间，因此要进行优化。")]),t._v(" "),a("h4",{attrs:{id:"dns缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns缓存"}},[t._v("#")]),t._v(" DNS缓存")]),t._v(" "),a("p",[t._v("DNS存在着多级缓存，从离浏览器的距离排序的话，有以下几种: "),a("strong",[t._v("浏览器缓存")]),t._v("，"),a("strong",[t._v("系统缓存")]),t._v("，"),a("strong",[t._v("路由器缓存")]),t._v("，IPS服务器缓存，"),a("strong",[t._v("根域名服务器缓存")]),t._v("，"),a("strong",[t._v("顶级域名服务器缓存")]),t._v("，"),a("strong",[t._v("主域名服务器缓存")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"dns负载均衡"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns负载均衡"}},[t._v("#")]),t._v(" DNS负载均衡")]),t._v(" "),a("p",[t._v("你访问"),a("code",[t._v("baidu.com")]),t._v("的时候，每次响应的并非是同一个服务器（IP地址不同），一般大公司都有成百上千台服务器来支撑访问，假设只有一个服务器，那它的性能和存储量要多大才能支撑这样大量的访问呢？DNS可以返回一个合适的机器的IP给用户，例如可以"),a("strong",[t._v("根据每台机器的负载量，该机器离用户地理位置的距离")]),t._v("等等，这种过程就是DNS负载均衡")]),t._v(" "),a("h2",{attrs:{id:"发起tcp连接"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发起tcp连接"}},[t._v("#")]),t._v(" 发起TCP连接")]),t._v(" "),a("p",[t._v("TCP提供一种可靠的传输，这个过程涉及到三次握手，四次挥手，下面我们详细看看 TCP提供一种面向连接的，可靠的字节流服务。 其首部的数据格式如下")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/202205251006907.jpg",alt:"TCP首部"}})]),t._v(" "),a("h3",{attrs:{id:"字段分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字段分析"}},[t._v("#")]),t._v(" 字段分析")]),t._v(" "),a("p",[t._v("首先，"),a("strong",[t._v("源端口号")]),t._v("和"),a("strong",[t._v("目标端口")]),t._v("号是不可少的，如果没有这两个端口号，数据就不知道应该发给哪个应用。")]),t._v(" "),a("p",[t._v("接下来有包的"),a("strong",[t._v("序")]),t._v("号，这个是为了解决包乱序的问题。")]),t._v(" "),a("p",[t._v("还有应该有的是"),a("strong",[t._v("确认号")]),t._v("，目的是确认发出去对方是否有收到。如果没有收到就应该重新发送，直到送达，这个是为了解决不丢包的问题。")]),t._v(" "),a("p",[t._v("接下来还有一些"),a("strong",[t._v("状态位")]),t._v("。例如 "),a("code",[t._v("SYN")]),t._v(" 是发起一个连接，"),a("code",[t._v("ACK")]),t._v(" 是回复，"),a("code",[t._v("RST")]),t._v(" 是重新连接，"),a("code",[t._v("FIN")]),t._v(" 是结束连接等。TCP 是面向连接的，因而双方要维护连接的状态，这些带状态位的包的发送，会引起双方的状态变更。")]),t._v(" "),a("p",[t._v("还有一个重要的就是"),a("strong",[t._v("窗口大小")]),t._v("。TCP 要做"),a("strong",[t._v("流量控制")]),t._v("，通信双方各声明一个窗口（缓存大小），标识自己当前能够的处理能力，别发送的太快，撑死我，也别发的太慢，饿死我。")]),t._v(" "),a("p",[t._v("除了做流量控制以外，TCP还会做"),a("strong",[t._v("拥塞控制")]),t._v("，对于真正的通路堵车不堵车，它无能为力，唯一能做的就是控制自己，也即控制发送的速度。不能改变世界，就改变自己嘛。")]),t._v(" "),a("h3",{attrs:{id:"三次握手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[t._v("#")]),t._v(" 三次握手")]),t._v(" "),a("p",[t._v("刚开始客户端处于 Closed 的状态，服务端处于 Listen 状态。 进行三次握手：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("第一次握手")]),t._v("：客户端给服务端发一个 SYN 报文，此时客户端处于 "),a("code",[t._v("SYN_SEND")]),t._v(" 状态。首部的同步位SYN=1，初始序号seq=x")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("第二次握手")]),t._v("：服务器收到客户端的 SYN 报文之后，会以自己的 SYN 报文作为应答，并且也是指定了自己的初始化序列号 ISN(s)。同时会把客户端的 初始序列号作为ack包 的值，表示自己已经收到了客户端的 SYN，此时服务器处于 "),a("code",[t._v("SYN_RCVD")]),t._v(" 的状态。")]),t._v(" "),a("p",[t._v("在确认报文段中SYN=1，ACK=1，确认号ack=x+1，初始序号seq=y。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("第三次握手")]),t._v("：客户端收到 SYN 报文之后，会发送一个 ACK 报文，当然，也是一样把服务器的 ISN + 1 作为 ACK 的值，表示已经收到了服务端的 SYN 报文，此时客户端处于 "),a("code",[t._v("ESTABLISHED")]),t._v(" 状态。服务器收到 ACK 报文之后，也处于 "),a("code",[t._v("ESTABLISHED")]),t._v(" 状态，此时，双方已建立起了连接。")]),t._v(" "),a("p",[t._v("确认报文段ACK=1，确认号ack=y+1，序号seq=x+1（初始为seq=x，第二个报文段所以要+1），ACK报文段可以携带数据，不携带数据则不消耗序号。")])])]),t._v(" "),a("p",[t._v("发送第一个SYN的一端将执行主动打开（active open），接收这个SYN并发回下一个SYN的另一端执行被动打开（passive open）。")]),t._v(" "),a("p",[t._v("在socket编程中，客户端执行connect()时，将触发三次握手。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/16da9fd28a45bd19%7Etplv-t2oaga2asx-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"三次握手.png"}})]),t._v(" "),a("h3",{attrs:{id:"为什么会采用三次握手-若采用二次握手可以吗-四次呢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么会采用三次握手-若采用二次握手可以吗-四次呢"}},[t._v("#")]),t._v(" 为什么会采用三次握手，若采用二次握手可以吗？ 四次呢？")]),t._v(" "),a("p",[t._v("弄清这个问题，我们需要先弄明白三次握手的目的是什么，能不能只用两次握手来达到同样的目的。")]),t._v(" "),a("ul",[a("li",[t._v("第一次握手：客户端发送网络包，服务端收到了。 这样服务端就能得出结论：客户端的发送能力、服务端的接收能力是正常的。")]),t._v(" "),a("li",[t._v("第二次握手：服务端发包，客户端收到了。 这样客户端就能得出结论：服务端的接收、发送能力，客户端的接收、发送能力是正常的。不过此时服务器并不能确认客户端的接收能力是否正常。")]),t._v(" "),a("li",[t._v("第三次握手：客户端发包，服务端收到了。 这样服务端就能得出结论：客户端的接收、发送能力正常，服务器自己的发送、接收能力也正常。")])]),t._v(" "),a("p",[t._v("因此，需要三次握手才能确认双方的接收与发送能力是否正常。")]),t._v(" "),a("h3",{attrs:{id:"四次挥手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[t._v("#")]),t._v(" 四次挥手")]),t._v(" "),a("p",[t._v("刚开始双方都处于 ESTABLISHED 状态，假如是客户端先发起关闭请求。四次挥手的过程如下：")]),t._v(" "),a("ol",[a("li",[a("strong",[t._v("第一次挥手")]),t._v("：客户端发送一个 FIN 报文，报文中会指定一个序列号。此时客户端处于 "),a("code",[t._v("FIN_WAIT1")]),t._v(" 状态。 即发出"),a("strong",[t._v("连接释放报文段")]),t._v("（FIN=1，序号seq=u），并停止再发送数据，主动关闭TCP连接，进入FIN_WAIT1（终止等待1）状态，等待服务端的确认。")]),t._v(" "),a("li",[a("strong",[t._v("第二次挥手")]),t._v("：服务端收到 FIN 之后，会发送 ACK 报文，且把客户端的序列号值 +1 作为 ACK 报文的序列号值，表明已经收到客户端的报文了，此时服务端处于 "),a("code",[t._v("CLOSE_WAIT")]),t._v(" 状态。 即服务端收到连接释放报文段后即发出"),a("strong",[t._v("确认报文段")]),t._v("（ACK=1，确认号ack=u+1，序号seq=v），服务端进入CLOSE_WAIT（关闭等待）状态，此时的TCP处于半关闭状态，客户端到服务端的连接释放。客户端收到服务端的确认后，进入FIN_WAIT2（终止等待2）状态，等待服务端发出的连接释放报文段。")]),t._v(" "),a("li",[a("strong",[t._v("第三次挥手")]),t._v("：如果服务端也想断开连接了，和客户端的第一次挥手一样，发给 FIN 报文，且指定一个序列号。此时服务端处于 "),a("code",[t._v("LAST_ACK")]),t._v(" 的状态。 即服务端没有要向客户端发出的数据，服务端发出"),a("strong",[t._v("连接释放报文段")]),t._v("（FIN=1，ACK=1，序号seq=w，确认号ack=u+1），服务端进入LAST_ACK（最后确认）状态，等待客户端的确认。")]),t._v(" "),a("li",[a("strong",[t._v("第四次挥手")]),t._v("：客户端收到 FIN 之后，一样发送一个 ACK 报文作为应答，且把服务端的序列号值 +1 作为自己 ACK 报文的序列号值，此时客户端处于 "),a("code",[t._v("TIME_WAIT")]),t._v(" 状态。需要过一阵子以确保服务端收到自己的 ACK 报文之后才会进入 CLOSED 状态，服务端收到 ACK 报文之后，就处于关闭连接了，处于 "),a("code",[t._v("CLOSED")]),t._v(" 状态。 即客户端收到服务端的连接释放报文段后，对此发出"),a("strong",[t._v("确认报文段")]),t._v("（ACK=1，seq=u+1，ack=w+1），客户端进入TIME_WAIT（时间等待）状态。此时TCP未释放掉，需要经过时间等待计时器设置的时间2MSL后，客户端才进入CLOSED状态。")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/16da9fd28b49f652%7Etplv-t2oaga2asx-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"image.png"}})]),t._v(" "),a("h3",{attrs:{id:"挥手为什么需要四次"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#挥手为什么需要四次"}},[t._v("#")]),t._v(" 挥手为什么需要四次？")]),t._v(" "),a("p",[t._v("因为当服务端收到客户端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中"),a("strong",[t._v("ACK报文是用来应答的，SYN报文是用来同步的")]),t._v('。但是关闭连接时，当服务端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉客户端，"你发的FIN报文我收到了"。只有等到我服务端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四次挥手。')]),t._v(" "),a("h3",{attrs:{id:"为什么客户端最后还要等待2msl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#为什么客户端最后还要等待2msl"}},[t._v("#")]),t._v(" 为什么客户端最后还要等待2MSL？")]),t._v(" "),a("p",[t._v("MSL（Maximum Segment Lifetime），TCP允许不同的实现可以设置不同的MSL值")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("第一，保证客户端发送的最后一个ACK报文能够到达服务器，因为这个ACK报文可能丢失，站在服务器的角度看来，我已经发送了FIN+ACK报文请求断开了，客户端还没有给我回应，应该是我发送的请求断开报文它没有收到，于是服务器又会重新发送一次，而客户端就能在这个2MSL时间段内收到这个重传的报文，接着给出回应报文，并且会重启2MSL计时器。")])]),t._v(" "),a("li",[a("h6",{attrs:{id:"第二-防止类似与-三次握手-中提到了的-已经失效的连接请求报文段-出现在本连接中。客户端发送完最后一个确认报文后-在这个2msl时间中-就可以使本连接持续的时间内所产生的所有报文段都从网络中消失。这样新的连接中不会出现旧连接的请求报文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二-防止类似与-三次握手-中提到了的-已经失效的连接请求报文段-出现在本连接中。客户端发送完最后一个确认报文后-在这个2msl时间中-就可以使本连接持续的时间内所产生的所有报文段都从网络中消失。这样新的连接中不会出现旧连接的请求报文"}},[t._v("#")]),t._v(" 第二，防止类似与“三次握手”中提到了的“已经失效的连接请求报文段”出现在本连接中。客户端发送完最后一个确认报文后，在这个2MSL时间中，就可以使本连接持续的时间内所产生的所有报文段都从网络中消失。这样新的连接中不会出现旧连接的请求报文")])])]),t._v(" "),a("h2",{attrs:{id:"发送http请求"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#发送http请求"}},[t._v("#")]),t._v(" 发送HTTP请求")]),t._v(" "),a("blockquote",[a("p",[t._v("首先科补一个小知识，HTTP的端口为80/8080，而HTTPS的端口为443")])]),t._v(" "),a("p",[t._v("发送HTTP请求的过程就是构建HTTP请求报文并通过TCP协议中发送到服务器指定端口 请求报文由"),a("strong",[t._v("请求行")]),t._v("，"),a("strong",[t._v("请求抱头")]),t._v("，"),a("strong",[t._v("请求正文")]),t._v("组成。")]),t._v(" "),a("h3",{attrs:{id:"请求行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求行"}},[t._v("#")]),t._v(" 请求行")]),t._v(" "),a("p",[t._v("请求行的格式为"),a("code",[t._v("Method Request-URL HTTP-Version CRLF")]),t._v(" "),a("code",[t._v("eg: GET index.html HTTP/1.1")]),t._v(" 常用的方法有: "),a("code",[t._v("GET")]),t._v(","),a("code",[t._v("POST")]),t._v(", "),a("code",[t._v("PUT")]),t._v(", "),a("code",[t._v("DELETE")]),t._v(", "),a("code",[t._v("OPTIONS")]),t._v(", "),a("code",[t._v("HEAD")]),t._v("。")]),t._v(" "),a("h4",{attrs:{id:"常见的请求方法区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见的请求方法区别"}},[t._v("#")]),t._v(" 常见的请求方法区别")]),t._v(" "),a("blockquote",[a("p",[t._v("在我大万维网世界中，TCP就像汽车，我们用TCP来运输数据，它很可靠，从来不会发生丢件少件的现象。但是如果路上跑的全是看起来一模一样的汽车，那这个世界看起来是一团混乱，送急件的汽车可能被前面满载货物的汽车拦堵在路上，整个交通系统一定会瘫痪。为了避免这种情况发生，交通规则HTTP诞生了。HTTP给汽车运输设定了好几个服务类别，有GET, POST, PUT, DELETE等等，HTTP规定，当执行GET请求的时候，要给汽车贴上GET的标签（设置method为GET），而且要求把传送的数据放在车顶上（url中）以方便记录。如果是POST请求，就要在车上贴上POST的标签，并把货物放在车厢里。当然，你也可以在GET的时候往车厢内偷偷藏点货物，但是这是很不光彩；也可以在POST的时候在车顶上也放一些数据，让人觉得傻乎乎的。HTTP只是个行为准则，而TCP才是GET和POST怎么实现的基本。")])]),t._v(" "),a("blockquote",[a("p",[t._v("中，还有另一个重要的角色：运输公司。不同的浏览器（发起http请求）和服务器（接受http请求）就是不同的运输公司。 虽然理论上，你可以在车顶上无限的堆货物（url中无限加参数）。但是运输公司可不傻，装货和卸货也是有很大成本的，他们会限制单次运输量来控制风险，数据量太大对浏览器和服务器都是很大负担。业界不成文的规定是，（大多数）浏览器通常都会限制url长度在2K个字节，而（大多数）服务器最多处理64K大小的url。超过的部分，恕不处理。如果你用GET服务，在request body偷偷藏了数据，不同服务器的处理方式也是不同的，有些服务器会帮你卸货，读出数据，有些服务器直接忽略，所以，虽然GET可以带request body，也不能保证一定能被接收到哦。")])]),t._v(" "),a("h3",{attrs:{id:"请求抱头"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求抱头"}},[t._v("#")]),t._v(" 请求抱头")]),t._v(" "),a("p",[t._v("请求报头允许客户端向服务器传递请求的附加信息和客户端自身的信息。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/16a634c93ecabe3a%7Etplv-t2oaga2asx-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"请求报头"}})]),t._v(" "),a("p",[t._v("从图中可以看出，请求报头中使用了Accept, Accept-Encoding, Accept-Language, Cache-Control, Connection, Cookie等字段。Accept用于指定客户端用于接受哪些类型的信息，Accept-Encoding与Accept类似，它用于指定接受的编码方式。Connection设置为Keep-alive用于告诉客户端本次HTTP请求结束之后并不需要关闭TCP连接，这样可以使下次HTTP请求使用相同的TCP通道，节省TCP连接建立的时间。")]),t._v(" "),a("h3",{attrs:{id:"请求正文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#请求正文"}},[t._v("#")]),t._v(" 请求正文")]),t._v(" "),a("p",[t._v("当使用POST, PUT等方法时，通常需要客户端向服务器传递数据。这些数据就储存在请求正文中。在请求包头中有一些与请求正文相关的信息，例如: 现在的Web应用通常采用Rest架构，请求的数据格式一般为json。这时就需要设置"),a("code",[t._v("Content-Type: application/json")]),t._v("。")]),t._v(" "),a("h3",{attrs:{id:"更重要的事情-http缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#更重要的事情-http缓存"}},[t._v("#")]),t._v(" 更重要的事情-HTTP缓存")]),t._v(" "),a("p",[t._v("HTTP属于客户端缓存，我们常认为浏览器有一个缓存数据库，用来保存一些静态文件，下面我们分为以下几个方面来简单介绍HTTP缓存")]),t._v(" "),a("ul",[a("li",[t._v("缓存的规则")]),t._v(" "),a("li",[t._v("缓存的方案")]),t._v(" "),a("li",[t._v("缓存的优点")]),t._v(" "),a("li",[t._v("不同刷新的请求执行过程")])]),t._v(" "),a("h4",{attrs:{id:"缓存的规则"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存的规则"}},[t._v("#")]),t._v(" 缓存的规则")]),t._v(" "),a("p",[t._v("缓存规则分为"),a("strong",[t._v("强制缓存")]),t._v("和"),a("strong",[t._v("协商缓存")])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://xiaolincoding.com/network/2_http/http_interview.html#%E4%BB%80%E4%B9%88%E6%98%AF%E5%BC%BA%E5%88%B6%E7%BC%93%E5%AD%98",target:"_blank",rel:"noopener noreferrer"}},[t._v("强制缓存和协商缓存的详细"),a("OutboundLink")],1)]),t._v(" "),a("h5",{attrs:{id:"强制缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制缓存"}},[t._v("#")]),t._v(" 强制缓存")]),t._v(" "),a("p",[t._v("当缓存数据库中有客户端需要的数据，客户端直接将数据从其中拿出来使用（如果数据未失效），当缓存服务器没有需要的数据时，客户端才会向服务端请求。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/16a634c93d8f18a3%7Etplv-t2oaga2asx-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"强制缓存"}})]),t._v(" "),a("h5",{attrs:{id:"协商缓存"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#协商缓存"}},[t._v("#")]),t._v(" 协商缓存")]),t._v(" "),a("p",[t._v("又称对比缓存。客户端会先从缓存数据库拿到一个缓存的标识，然后向服务端验证标识是否失效，如果没有失效服务端会返回304，这样客户端可以直接去缓存数据库拿出数据，如果失效，服务端会返回新的数据")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/16a634c93d5e5406%7Etplv-t2oaga2asx-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"协商缓存"}})]),t._v(" "),a("blockquote",[a("p",[t._v("强制缓存的优先级高于协商缓存，若两种缓存皆存在，且强制缓存命中目标，则协商缓存不再验证标识。")])]),t._v(" "),a("h4",{attrs:{id:"缓存的优点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#缓存的优点"}},[t._v("#")]),t._v(" 缓存的优点")]),t._v(" "),a("ul",[a("li",[t._v("减少了冗余的数据传递，节省宽带流量")]),t._v(" "),a("li",[t._v("减少了服务器的负担，大大提高了网站性能")]),t._v(" "),a("li",[t._v("加快了客户端加载网页的速度 这也正是HTTP缓存属于客户端缓存的原因。")])]),t._v(" "),a("h4",{attrs:{id:"不同刷新的请求执行过程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#不同刷新的请求执行过程"}},[t._v("#")]),t._v(" 不同刷新的请求执行过程")]),t._v(" "),a("h5",{attrs:{id:"浏览器地址栏中写入url-回车"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器地址栏中写入url-回车"}},[t._v("#")]),t._v(" 浏览器地址栏中写入URL，回车")]),t._v(" "),a("ul",[a("li",[t._v("浏览器发现缓存中有这个文件了，不用继续请求了，直接去缓存拿。（最快）")])]),t._v(" "),a("h5",{attrs:{id:"f5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#f5"}},[t._v("#")]),t._v(" F5")]),t._v(" "),a("ul",[a("li",[t._v("F5就是告诉浏览器，别偷懒，好歹去服务器看看这个文件是否有过期了。于是浏览器就战战兢兢的发送一个请求带上If-Modify-since。")])]),t._v(" "),a("h5",{attrs:{id:"ctrl-f5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ctrl-f5"}},[t._v("#")]),t._v(" Ctrl+F5")]),t._v(" "),a("ul",[a("li",[t._v("告诉浏览器，你先把你缓存中的这个文件给我删了，然后再去服务器请求个完整的资源文件下来。于是客户端就完成了强行更新的操作.")])]),t._v(" "),a("h2",{attrs:{id:"服务器处理请求并返回http报文"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务器处理请求并返回http报文"}},[t._v("#")]),t._v(" 服务器处理请求并返回HTTP报文")]),t._v(" "),a("p",[t._v("它会对TCP连接进行处理，对HTTP协议进行解析，并按照报文格式进一步封装成HTTP Request对象，供上层使用。这一部分工作一般是由Web服务器去进行，我使用过的Web服务器有Tomcat, Nginx和Apache等等 HTTP报文也分成三份，"),a("strong",[t._v("状态码")]),t._v(" ，"),a("strong",[t._v("响应报头")]),t._v("和"),a("strong",[t._v("响应报文")])]),t._v(" "),a("h3",{attrs:{id:"状态码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态码"}},[t._v("#")]),t._v(" 状态码")]),t._v(" "),a("h4",{attrs:{id:"常见状态码区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常见状态码区别"}},[t._v("#")]),t._v(" 常见状态码区别")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("1**")]),t._v(" "),a("th",[t._v("提示信息，表示目前是协议处理的中间状态，还需要后续的操作")]),t._v(" "),a("th")])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("2**")]),t._v(" "),a("td",[t._v("成功，报文已经收到并正确处理")]),t._v(" "),a("td",[t._v("200（成功）     "),a("br"),t._v("204（成功但响应头无数据）  "),a("br"),t._v("206（响应返回body只是一部分。）")])]),t._v(" "),a("tr",[a("td",[t._v("3**")]),t._v(" "),a("td",[t._v("重定向，资源位置发生变动，需要客户端重新发送请求")]),t._v(" "),a("td",[t._v("301：永远重定向需要新的URL，响应字段含有location，表示后续跳转的路径； "),a("br"),t._v(" 302：临时重定向，说明请求的资源还在，但暂时需要⽤另⼀个 URL 来访问，同样含有location；  "),a("br"),t._v("304：缓存重定向，不具有跳转，直接访问缓存")])]),t._v(" "),a("tr",[a("td",[t._v("4**")]),t._v(" "),a("td",[t._v("客户端错误，请求报文有误，服务器无法处理")]),t._v(" "),a("td",[t._v("400：表示客户端请求的报⽂有错误，但只是个笼统的错误； <br /"),a("br"),t._v("403；表示服务器禁⽌访问资源，并不是客户端的请求出错，  "),a("br"),t._v("404：表示请求的资源在服务器上不存在或未找到；")])]),t._v(" "),a("tr",[a("td",[t._v("5**")]),t._v(" "),a("td",[t._v("服务器错误，服务器子处理请求时候发生内部错误")]),t._v(" "),a("td",[t._v("500：服务器发生错误，较为笼统，  "),a("br"),t._v("501：客户端请求的功能还不⽀持，类似“即将开业，敬请期待”；  "),a("br"),t._v("502：服务器作为⽹关或代理时返回的错误码，自身正常，方位后端服务器出错；  "),a("br"),t._v("503：网络正忙，稍后尝试")])])])]),t._v(" "),a("h2",{attrs:{id:"浏览器解析渲染页面"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器解析渲染页面"}},[t._v("#")]),t._v(" 浏览器解析渲染页面")]),t._v(" "),a("h3",{attrs:{id:"进程线程以及eventloop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#进程线程以及eventloop"}},[t._v("#")]),t._v(" 进程线程以及eventLoop")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://kaifengguan.github.io/blog/FE/JavaScript/javascript-relearningJS-1/#_2-1-%E7%BA%BF%E7%A8%8B%E4%B8%8E%E8%BF%9B%E7%A8%8B",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器的进程和线程"),a("OutboundLink")],1)]),t._v(" "),a("h3",{attrs:{id:"浏览器解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器解析"}},[t._v("#")]),t._v(" 浏览器解析")]),t._v(" "),a("ul",[a("li",[t._v("解析HTML形成DOM树")]),t._v(" "),a("li",[t._v("解析CSS会产生CSS规则树，它和DOM结构比较像。")]),t._v(" "),a("li",[t._v("解析Javascript脚本，等到Javascript 脚本文件加载后， 通过 DOM API 和 CSSOM API 来操作 DOM Tree 和 CSS Rule Tree。")])]),t._v(" "),a("h3",{attrs:{id:"浏览器渲染"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览器渲染"}},[t._v("#")]),t._v(" 浏览器渲染")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/8c793573eec341eca76d6adcd59897b9%7Etplv-k3u1fbpfcp-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"img"}})]),t._v(" "),a("p",[a("strong",[t._v("当我们生成 DOM 树和 CSSOM 树以后，就需要将这两棵树组合为渲染树。"),a("strong",[t._v("渲染过程中，如果遇到"),a("code",[t._v("<script>")]),t._v("就停止渲染，执行 JS 代码。因为浏览器有")]),t._v("GUI渲染线程")]),t._v("与"),a("strong",[t._v("JS引擎线程")]),t._v("，为了防止渲染出现不可预期的结果，这"),a("strong",[t._v("两个线程是互斥的关系")]),t._v("。 JavaScript的加载、解析与执行会"),a("strong",[t._v("阻塞DOM的构")]),t._v("建，也就是说，在构建DOM时，HTML解析器若遇到了JavaScript，那么它会暂停构建DOM，将控制权移交给JavaScript引擎，等JavaScript引擎运行完毕，浏览器再从中断的地方恢复DOM构建。")]),t._v(" "),a("p",[a("strong",[t._v("JS文件不只是阻塞DOM的构建，它会导致CSSOM也阻塞DOM的构建")]),t._v("。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/169debdd09eeccaa%7Etplv-t2oaga2asx-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("原本DOM和CSSOM的构建是互不影响，井水不犯河水，但是一旦引入了JavaScript，CSSOM也开始阻塞DOM的构建，只有CSSOM构建完毕后，DOM再恢复DOM构建。")]),t._v(" "),a("p",[t._v("JavaScript不只是可以改DOM，它还可以更改样式，也就是它可以更改CSSOM。因为不完整的CSSOM是无法使用的")]),t._v(" "),a("h3",{attrs:{id:"性能优化之回流重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化之回流重绘"}},[t._v("#")]),t._v(" 性能优化之回流重绘")]),t._v(" "),a("h4",{attrs:{id:"回流-重拍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#回流-重拍"}},[t._v("#")]),t._v(" 回流（重拍）")]),t._v(" "),a("p",[t._v("当RenderTree中部分或全部元素的尺寸、结构、或某些属性发生改变时，浏览器重新渲染部分或全部文档的过程称为回流。")]),t._v(" "),a("p",[t._v("会导致回流的操作：")]),t._v(" "),a("ul",[a("li",[t._v("页面首次渲染")]),t._v(" "),a("li",[t._v("浏览器窗口大小发生改变")]),t._v(" "),a("li",[t._v("元素尺寸或位置发生改变")]),t._v(" "),a("li",[t._v("元素内容变化（文字数量或图片大小等等）")]),t._v(" "),a("li",[t._v("元素字体大小变化")]),t._v(" "),a("li",[t._v("添加或者删除可见的DOM元素")]),t._v(" "),a("li",[t._v("激活CSS伪类（例如：:hover）")]),t._v(" "),a("li",[t._v("查询某些属性或调用某些方法")])]),t._v(" "),a("p",[t._v("一些常用且会导致回流的属性和方法：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("clientWidth、clientHeight、clientTop、clientLeft")])]),t._v(" "),a("li",[a("code",[t._v("offsetWidth、offsetHeight、offsetTop、offsetLeft")])]),t._v(" "),a("li",[a("code",[t._v("scrollWidth、scrollHeight、scrollTop、scrollLeft")])]),t._v(" "),a("li",[a("code",[t._v("scrollIntoView()、scrollIntoViewIfNeeded()")])]),t._v(" "),a("li",[a("code",[t._v("getComputedStyle()")])]),t._v(" "),a("li",[a("code",[t._v("getBoundingClientRect()")])]),t._v(" "),a("li",[a("code",[t._v("scrollTo()")])])]),t._v(" "),a("h4",{attrs:{id:"重绘"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重绘"}},[t._v("#")]),t._v(" 重绘")]),t._v(" "),a("p",[t._v("当页面中元素样式的改变并不影响它在文档流中的位置时（例如：color、background-color、visibility等），浏览器会将新样式赋予给元素并重新绘制它，这个过程称为重绘。")]),t._v(" "),a("p",[a("strong",[t._v("回流必重绘")])]),t._v(" "),a("h4",{attrs:{id:"优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#优化"}},[t._v("#")]),t._v(" 优化")]),t._v(" "),a("h5",{attrs:{id:"css"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#css"}},[t._v("#")]),t._v(" CSS")]),t._v(" "),a("ul",[a("li",[t._v("避免使用table布局。")]),t._v(" "),a("li",[t._v("尽可能在DOM树的最末端改变class。")]),t._v(" "),a("li",[t._v("避免设置多层内联样式。")]),t._v(" "),a("li",[t._v("将动画效果应用到position属性为absolute或fixed的元素上。")]),t._v(" "),a("li",[t._v("避免使用CSS表达式（例如：calc()）。")])]),t._v(" "),a("h5",{attrs:{id:"javascript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#javascript"}},[t._v("#")]),t._v(" JavaScript")]),t._v(" "),a("ul",[a("li",[t._v("避免频繁操作样式，最好一次性重写style属性，或者将样式列表定义为class并一次性更改class属性。")]),t._v(" "),a("li",[t._v("避免频繁操作DOM，创建一个documentFragment，在它上面应用所有DOM操作，最后再把它添加到文档中。")]),t._v(" "),a("li",[a("strong",[t._v("也可以先为元素设置display: none，操作结束后再把它显示出来。因为在display属性为none的元素上进行的DOM操作不会引发回流和重绘。")])]),t._v(" "),a("li",[t._v("避免频繁读取会引发回流/重绘的属性，如果确实需要多次使用，就用一个变量缓存起来。")]),t._v(" "),a("li",[t._v("对具有复杂动画的元素使用绝对定位，使它脱离文档流，否则会引起父元素及后续元素频繁回流。")])]),t._v(" "),a("h3",{attrs:{id:"js的解析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#js的解析"}},[t._v("#")]),t._v(" JS的解析")]),t._v(" "),a("p",[t._v("JS的解析是由浏览器的JS引擎完成的。由于JavaScript是单线程运行，也就是说一个时间只能干一件事，干这件事情时其他事情都有排队，但是有些人物比较耗时（例如IO操作），所以将任务分为"),a("strong",[t._v("同步任务")]),t._v("和"),a("strong",[t._v("异步任务")]),t._v("，所有的同步任务放在主线程上执行，形成执行栈，而异步任务等待，当执行栈被清空时才去看看异步任务有没有东西要搞，有再提取到主线程执行，这样往复循环（冤冤相报何时了，阿弥陀佛），就形成了Event Loop事件循环，下面来看看大人物")]),t._v(" "),a("h3",{attrs:{id:"案例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#案例"}},[t._v("#")]),t._v(" 案例")]),t._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[t._v("console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'4'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'5'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\nprocess"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'6'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'7'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'8'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'9'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    process"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("nextTick")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'10'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Promise")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'11'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("function")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        console"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'12'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br"),a("span",{staticClass:"line-number"},[t._v("31")]),a("br"),a("span",{staticClass:"line-number"},[t._v("32")]),a("br"),a("span",{staticClass:"line-number"},[t._v("33")]),a("br"),a("span",{staticClass:"line-number"},[t._v("34")]),a("br"),a("span",{staticClass:"line-number"},[t._v("35")]),a("br"),a("span",{staticClass:"line-number"},[t._v("36")]),a("br")])]),a("p",[t._v("我们来分析一下")]),t._v(" "),a("ul",[a("li",[t._v("整体script进入主线程，遇到"),a("code",[t._v("console.log('1')")]),t._v("，直接输出")]),t._v(" "),a("li",[t._v("遇到"),a("code",[t._v("setTimeout")]),t._v("，将其回调函数分发到宏任务事件队列，暂时标记为setTimeout1")]),t._v(" "),a("li",[t._v("遇到"),a("code",[t._v("process.nextTick()")]),t._v("，将其回调函数分发到微任务事件队列，标记为"),a("code",[t._v("process.nextTick1")]),t._v("("),a("strong",[t._v("这个地方有点出入，我一般认为```process.nextTick()推入主线程执行栈栈底，作为执行栈最后一个任务执行")]),t._v(")")]),t._v(" "),a("li",[t._v("遇到Promise，立即执行，输出"),a("code",[t._v("7")]),t._v("，then函数分发的微任务事件队列，标记为Promise1。")]),t._v(" "),a("li",[t._v("遇到setTimeout，将其回调函数分发到宏任务事件队列，标记为setTimeout2。")]),t._v(" "),a("li",[t._v("现在已经输出了"),a("code",[t._v("1,7")]),t._v(",宏任务和微任务的事件队列 情况如下")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/16a634ca0fffe506%7Etplv-t2oaga2asx-zoom-in-crop-mark%3A1304%3A0%3A0%3A0-20220417163923211.awebp",alt:"队列"}})]),t._v(" "),a("ul",[a("li",[t._v("现在主线程执行栈被清空，去微任务看看，发现有两个事件等待，由于队列是先进先出，执行"),a("code",[t._v("process.nextTick1")]),t._v(",输出"),a("code",[t._v("6")]),t._v("，接着执行"),a("code",[t._v("Promise1")]),t._v(",输出"),a("code",[t._v("8")]),t._v("。")])]),t._v(" "),a("blockquote",[a("p",[t._v("至此，第一轮循环已经结束，输出了"),a("code",[t._v("1,7,6,8")]),t._v(",接下来执行第二轮循环 ，先从宏任务的"),a("code",[t._v("setTimeout1")]),t._v("开始")])]),t._v(" "),a("ul",[a("li",[t._v("遇到"),a("code",[t._v("console.log('2')")]),t._v("，执行输出。")]),t._v(" "),a("li",[t._v("遇到"),a("code",[t._v("process.nextTick()")]),t._v("，将其回调函数分发到微任务，标记为"),a("code",[t._v("process.nextTick2")]),t._v(",又遇到")])]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("Promise`，立即执行，输出`4`,将then函数推入微任务事件队列，标记为`Promise2\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("ul",[a("li",[t._v("到此宏任务的一个任务执行完毕，输出了"),a("code",[t._v("2,4")]),t._v(",来看看事件队列")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/16a634ca14600384%7Etplv-t2oaga2asx-zoom-in-crop-mark%3A1304%3A0%3A0%3A0-20220417163959156.awebp",alt:"队列2"}})]),t._v(" "),a("ul",[a("li",[t._v("去微任务看看，我们先处理"),a("code",[t._v("process.nextTick2")]),t._v(",输出"),a("code",[t._v("3")]),t._v(",接着再来执行"),a("code",[t._v("Promise2")]),t._v(",输出"),a("code",[t._v("5")]),t._v("。")])]),t._v(" "),a("p",[t._v("第二轮循环执行完毕。现在一共输出了"),a("code",[t._v("1,7,6,8,2,4,3,5")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("从"),a("code",[t._v("setTimeout2")]),t._v("开始第三轮循环 ，先直接输出"),a("code",[t._v("9")]),t._v(",遇到"),a("code",[t._v("process.nextTick()")]),t._v("，将其回调函数分发到微任务事件队列，标记为"),a("code",[t._v("process.nextTick3")]),t._v(",又遇到恶心的Promise，立即执行输出"),a("code",[t._v("11")]),t._v("，将then函数分发到微任务，标记为Promise3。")])]),t._v(" "),a("li",[a("p",[t._v("执行微任务，看看还有撒子事件")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/16a634ca34c3067f%7Etplv-t2oaga2asx-zoom-in-crop-mark%253A1304%253A0%253A0%253A0-20220417164015257.awebp",alt:""}})]),t._v(" "),a("p",[t._v("居然还有事件，能咋办，接着执行呗，输出"),a("code",[t._v("10,12")]),t._v("。 至此，全部任务执行完毕，输出顺序为"),a("code",[t._v("1,7,6,8,2,4,3,5,9,11,10,12")]),t._v(".")])])]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"title"},[t._v("注意")]),a("p",[t._v("这段代码执行结果可能与node等环境不同而发生变化。")])]),a("h2",{attrs:{id:"补充说明"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#补充说明"}},[t._v("#")]),t._v(" 补充说明")]),t._v(" "),a("h3",{attrs:{id:"_1-async和defer的作用是什么-有什么区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-async和defer的作用是什么-有什么区别"}},[t._v("#")]),t._v(" 1.async和defer的作用是什么？有什么区别?")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/1640656e70765ac7%7Etplv-t2oaga2asx-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"async和defer"}})]),t._v(" "),a("p",[t._v("其中蓝色线代表JavaScript加载；红色线代表JavaScript执行；绿色线代表 HTML 解析。")]),t._v(" "),a("h5",{attrs:{id:"_1-情况1-script-src-script-js-script"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-情况1-script-src-script-js-script"}},[t._v("#")]),t._v(" 1. 情况1"),a("code",[t._v('<script src="script.js"><\/script>')])]),t._v(" "),a("p",[t._v("浏览器在解析 HTML 的时候，如果遇到一个没有任何属性的 script 标签，就会暂停解析，先发送网络请求获取该 JS 脚本的代码内容，然后让 JS 引擎执行该代码，当代码执行完毕后恢复解析。整个过程如下图所示：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/caf2f618530046658ab8e3b4a8699589%7Etplv-k3u1fbpfcp-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"script"}})]),t._v(" "),a("h5",{attrs:{id:"_2-情况2-script-defer-src-script-js-script-延迟执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-情况2-script-defer-src-script-js-script-延迟执行"}},[t._v("#")]),t._v(" 2. 情况2 "),a("code",[t._v('<script defer src="script.js"><\/script>')]),t._v("("),a("strong",[t._v("延迟执行")]),t._v(")")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/b8313e4787f04c79838fec9961bda0fb%7Etplv-k3u1fbpfcp-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"script"}})]),t._v(" "),a("p",[t._v("defer 属性表示延迟执行引入的 JavaScript，即这段 JavaScript 加载时 HTML 并未停止解析，这两个过程是并行的。整个 document 解析完毕且 defer-script 也加载完成之后（这两件事情的顺序无关），会执行所有由 defer-script 加载的 JavaScript 代码，")]),t._v(" "),a("p",[t._v("如果存在多个 defer script 标签，浏览器（IE9及以下除外）会保证它们按照在 HTML 中出现的顺序执行，不会破坏 JS 脚本之间的依赖关系。")]),t._v(" "),a("p",[t._v("defer 与相比普通 script，有两点区别："),a("strong",[t._v("载入 JavaScript 文件时不阻塞 HTML 的解析，执行阶段被放到 HTML 标签解析完成之后。 在加载多个JS脚本的时候，async是无顺序的加载，而defer是有顺序的加载。")])]),t._v(" "),a("h5",{attrs:{id:"_3-情况3-script-async-src-script-js-script-异步下载"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-情况3-script-async-src-script-js-script-异步下载"}},[t._v("#")]),t._v(" 3. 情况3"),a("code",[t._v('<script async src="script.js"><\/script>')]),t._v(" ("),a("strong",[t._v("异步下载")]),t._v(")")]),t._v(" "),a("p",[t._v("async 属性表示异步执行引入的 JavaScript，与 defer 的区别在于，如果已经加载好，就会开始执行——无论此刻是 HTML 解析阶段还是 DOMContentLoaded 触发之后。需要注意的是，这种方式加载的 JavaScript 依然会阻塞 load 事件。换句话说，async-script 可能在 DOMContentLoaded 触发之前或之后执行，但一定在 load 触发之前执行。")]),t._v(" "),a("p",[t._v("所以 async 是不可控的，因为执行时间不确定，你如果在异步 JS 脚本中获取某个 DOM 元素，有可能获取到也有可能获取不到。而且如果存在多个 async 的时候，它们之间的执行顺序也不确定，完全依赖于网络传输结果，谁先到执行谁。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("script 标签")]),t._v(" "),a("th",[t._v("JS 执行顺序")]),t._v(" "),a("th",[t._v("是否阻塞解析 HTML")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("<script>")])]),t._v(" "),a("td",[t._v("在 HTML 中的顺序")]),t._v(" "),a("td",[t._v("阻塞")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("<script async>")])]),t._v(" "),a("td",[t._v("网络请求返回顺序")]),t._v(" "),a("td",[t._v("可能阻塞，也可能不阻塞")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("<script defer>")])]),t._v(" "),a("td",[t._v("在 HTML 中的顺序")]),t._v(" "),a("td",[t._v("不阻塞")])])])]),t._v(" "),a("h3",{attrs:{id:"_2-为什么操作-dom-慢"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-为什么操作-dom-慢"}},[t._v("#")]),t._v(" 2.为什么操作 DOM 慢")]),t._v(" "),a("p",[t._v("把 DOM 和 JavaScript 各自想象成一个岛屿，它们之间用收费桥梁连接。——《高性能 JavaScript》")]),t._v(" "),a("p",[t._v("JS 是很快的，在 JS 中修改 DOM 对象也是很快的。在JS的世界里，一切是简单的、迅速的。但 DOM 操作并非 JS 一个人的独舞，而是两个模块之间的协作。")]),t._v(" "),a("p",[t._v("因为 DOM 是属于渲染引擎中的东西，而 JS 又是 JS 引擎中的东西。当我们用 JS 去操作 DOM 时，本质上是 JS 引擎和渲染引擎之间进行了“跨界交流”。这个“跨界交流”的实现并不简单，它依赖了桥接接口作为“桥梁”（如下图）。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/169e3dc0c4a438fd%7Etplv-t2oaga2asx-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("过“桥”要收费——这个开销本身就是不可忽略的。我们每操作一次 DOM（不管是为了修改还是仅仅为了访问其值），都要过一次“桥”。过“桥”的次数一多，就会产生比较明显的性能问题。因此“减少 DOM 操作”的建议，并非空穴来风。")]),t._v(" "),a("h3",{attrs:{id:"_3-你真的了解回流和重绘吗"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-你真的了解回流和重绘吗"}},[t._v("#")]),t._v(" 3.你真的了解回流和重绘吗")]),t._v(" "),a("p",[t._v("渲染的流程基本上是这样（如下图黄色的四个步骤）：1.计算CSS样式  2.构建Render Tree  3.Layout – 定位坐标和大小  4.正式开画")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/167f068e4de6c7ce%7Etplv-t2oaga2asx-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"img"}})]),t._v(" "),a("p",[t._v("注意：上图流程中有很多连接线，这表示了Javascript动态修改了DOM属性或是CSS属性会导致重新Layout，但有些改变不会重新Layout，就是上图中那些指到天上的箭头，比如修改后的CSS rule没有被匹配到元素。")]),t._v(" "),a("p",[t._v("这里重要要说两个概念，一个是Reflow，另一个是Repaint")]),t._v(" "),a("ul",[a("li",[t._v("重绘：当我们对 DOM 的修改导致了样式的变化、却并未影响其几何属性（比如修改了颜色或背景色）时，浏览器不需重新计算元素的几何属性、直接为该元素绘制新的样式（跳过了上图所示的回流环节）。")]),t._v(" "),a("li",[t._v("回流：当我们对 DOM 的修改引发了 DOM 几何尺寸的变化（比如修改元素的宽、高或隐藏元素等）时，浏览器需要重新计算元素的几何属性（其他元素的几何属性和位置也会因此受到影响），然后再将计算的结果绘制出来。这个过程就是回流（也叫重排）")])]),t._v(" "),a("p",[t._v("我们知道，当网页生成的时候，至少会渲染一次。在用户访问的过程中，还会不断重新渲染。重新渲染会重复回流+重绘或者只有重绘。 "),a("strong",[t._v("回流必定会发生重绘，重绘不一定会引发回流")]),t._v("。重绘和回流会在我们设置节点样式时频繁出现，同时也会很大程度上影响性能。"),a("strong",[t._v("回流所需的成本比重绘高的多")]),t._v("，改变父节点里的子节点很可能会导致父节点的一系列回流。")]),t._v(" "),a("h2",{attrs:{id:"性能优化策略"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化策略"}},[t._v("#")]),t._v(" 性能优化策略")]),t._v(" "),a("p",[t._v("基于上面介绍的浏览器渲染原理，DOM 和 CSSOM 结构构建顺序，初始化可以对页面渲染做些优化，提升页面性能。")]),t._v(" "),a("ul",[a("li",[t._v("JS优化： "),a("code",[t._v("<script>")]),t._v("标签加上 defer属性 和 async属性 用于在不阻塞页面文档解析的前提下，控制脚本的下载和执行。\n"),a("ul",[a("li",[t._v("defer属性： 用于开启新的线程下载脚本文件，并使脚本在文档解析完成后执行。")]),t._v(" "),a("li",[t._v("async属性： HTML5新增属性，用于异步下载脚本文件，下载完毕立即解释执行代码。")])])]),t._v(" "),a("li",[t._v("CSS优化： "),a("code",[t._v("<link>")]),t._v(" 标签的 rel属性 中的属性值设置为 preload 能够让你在你的HTML页面中可以指明哪些资源是在页面加载完成后即刻需要的,最优的配置加载顺序，提高渲染性能")])]),t._v(" "),a("details",{staticClass:"custom-block details"},[a("summary",[t._v("参考链接")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6905931622374342670",target:"_blank",rel:"noopener noreferrer"}},[t._v("从输入URL到浏览器显示页面过程中都发生了什么？"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903832435032072#heading-66",target:"_blank",rel:"noopener noreferrer"}},[t._v("史上最详细的经典面试题 从输入URL到看到页面发生了什么？"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903815758479374#heading-8",target:"_blank",rel:"noopener noreferrer"}},[t._v("你不知道的浏览器页面渲染机制"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("a",{attrs:{href:"https://juejin.cn/post/6844903815758479374",target:"_blank",rel:"noopener noreferrer"}},[t._v("图解 script 标签中的 async 和 defer 属性"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=r.exports}}]);