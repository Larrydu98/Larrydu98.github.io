(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{615:function(t,a,s){"use strict";s.r(a);var e=s(10),r=Object(e.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("p",[t._v("主要内容：Vue面试基础问题")]),t._v(" "),s("h2",{attrs:{id:"_1-vue和react的差别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-vue和react的差别"}},[t._v("#")]),t._v(" 1. VUE和React的差别")]),t._v(" "),s("h3",{attrs:{id:"相同点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相同点"}},[t._v("#")]),t._v(" 相同点")]),t._v(" "),s("p",[t._v("他们都是JS的UI组件库，专注于创造前端的富应用。")]),t._v(" "),s("ul",[s("li",[t._v("两者都是用于创建UI的JavaScript库；")]),t._v(" "),s("li",[t._v("两者都快速轻便；")]),t._v(" "),s("li",[t._v("都有基于组件的架构；")]),t._v(" "),s("li",[t._v("都是用虚拟DOM；")]),t._v(" "),s("li",[t._v("都可放入单个HTML文件中，或者成为更复杂webpack设置中的模块；")]),t._v(" "),s("li",[t._v("都有独立但常用的路由器和状态管理库；")])]),t._v(" "),s("h3",{attrs:{id:"不同点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#不同点"}},[t._v("#")]),t._v(" 不同点：")]),t._v(" "),s("p",[t._v("**他们之间最大的不同点是：**vue使用的是HTML模板文件，而React是使用的是JavaScript。Vue有数据双向绑定v-modle这样的语法糖")]),t._v(" "),s("ul",[s("li",[t._v("vue组件是使用的是全局和局部注册的方式，react使用的是import引入的方式")]),t._v(" "),s("li",[t._v("vue中的props是动态变化的，子组件也会动态更新，而react官方建议的是props像函数一样输入和输出纯对应，不建议用props进行更改视图")]),t._v(" "),s("li",[t._v("vue都实现了时间的接口，方便父子组件进行通讯，小型的项目不需要引入状态管理机制，而react需要自己进行设定状态管理机制")]),t._v(" "),s("li"),t._v(" "),s("li",[t._v("vue多了指令系统，让模版可以实现更丰富的功能，而React只能使用JSX语法；")]),t._v(" "),s("li",[t._v("Vue增加的语法糖computed和watch，而在React中需要自己写一套逻辑来实现；")]),t._v(" "),s("li",[t._v("react的思路是all in js，通过js来生成html，所以设计了jsx，还有通过js来操作css，而vue是把html，css，js组合在一起，各自处理各自的任务")]),t._v(" "),s("li",[t._v("react做的事情很少，很大一部分都交给了社区，而vue自己集成了很多东西")]),t._v(" "),s("li",[t._v("react是整体的思路的就是函数式，所以推崇纯组件，数据不可变，单向数据流，当然需要双向的地方也可以做到，而vue是数据可变的，双向绑定，声明式的写法，vue组件的横向拆分很多情况下用mixin。")])]),t._v(" "),s("h3",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("table",[s("thead",[s("tr",[s("th",[t._v("vue的优势")]),t._v(" "),s("th",[t._v("react优势")])])]),t._v(" "),s("tbody",[s("tr",[s("td",[t._v("模板和渲染函数的弹性选择")]),t._v(" "),s("td",[t._v("更适用于大型应用和更好的可测试性")])]),t._v(" "),s("tr",[s("td",[t._v("简单的语法及项目创建")]),t._v(" "),s("td",[t._v("同时适用于Web端和原生App")])]),t._v(" "),s("tr",[s("td",[t._v("更快的渲染速度和小体积")]),t._v(" "),s("td",[t._v("更大的生态圈带来的更多支持和工具")])])])]),t._v(" "),s("h2",{attrs:{id:"_2-mvc-和-mvvm-区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-mvc-和-mvvm-区别"}},[t._v("#")]),t._v(" 2. MVC 和 MVVM 区别")]),t._v(" "),s("h3",{attrs:{id:"mvc"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvc"}},[t._v("#")]),t._v(" MVC")]),t._v(" "),s("p",[t._v("MVC 全名是 Model View Controller，是模型(model)－视图(view)－控制器(controller)的缩写，一种软件设计典范")]),t._v(" "),s("ul",[s("li",[t._v("Model（模型）数据层：是应用程序中用于处理应用程序数据逻辑的部分。通常模型对象负责在数据库中存取数据")]),t._v(" "),s("li",[t._v("View（视图）其实就是视图层：是应用程序中处理数据显示的部分。通常视图是依据模型数据创建的")]),t._v(" "),s("li",[t._v("Controller（控制器）其实就是交互端：是应用程序中处理用户交互的部分。通常控制器负责从视图读取数据，控制用户输入，并向模型发送数据")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/0e4d22e916014ee7abb10e4b350e5583%7Etplv-k3u1fbpfcp-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"mvc.png"}})]),t._v(" "),s("p",[t._v("**in one words:**就是controller负责把model的数据用View进行展现出来，")]),t._v(" "),s("h3",{attrs:{id:"mvvm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#mvvm"}},[t._v("#")]),t._v(" MVVM")]),t._v(" "),s("p",[t._v("MVVM新增了VM(view-model)")]),t._v(" "),s("ul",[s("li",[t._v("ViewModel 层：做了两件事达到了数据的双向绑定 一是将【模型】转化成【视图】，即将后端传递的数据转化成所看到的页面。实现的方式是："),s("strong",[t._v("数据绑定")]),t._v("。二是将【视图】转化成【模型】，即将所看到的页面转化成后端的数据。实现的方式是："),s("strong",[t._v("DOM 事件监听")]),t._v("。")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/32c0545686454396a7e39b86b644fe73%7Etplv-k3u1fbpfcp-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"mvvm.png"}})]),t._v(" "),s("p",[t._v("MVVM和MVM最大的区别：实现了model和view之间的自动同步，当model属性改变的时候，view层会自动渲染（就是vue中的数据驱动的思想）")]),t._v(" "),s("p",[t._v("MVVM具有低耦合提高代码的复用性；vue并不是完全遵循的MVVM模式，")]),t._v(" "),s("div",{staticClass:"custom-block tip"},[s("p",{staticClass:"title"}),s("p",[t._v("由于mvvm模式是不能让view层和model进行直接通讯的，但是vue中的$ref可以让model直接操作view违反了这一规定")])]),s("h2",{attrs:{id:"_3-路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-路由"}},[t._v("#")]),t._v(" 3. 路由")]),t._v(" "),s("h3",{attrs:{id:"_3-1-router的使用方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-1-router的使用方式"}},[t._v("#")]),t._v(" 3.1 router的使用方式")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("在router/index.js的文件中引入vue-router,Vue.use(VueRouter)")])]),t._v(" "),s("li",[s("p",[t._v("new VueRouter 导出")])]),t._v(" "),s("li",[s("p",[t._v("创建vue实例的地方，引入router")])]),t._v(" "),s("li",[s("p",[t._v("在具体的页面中使用router-link标签 :to属性配置path或者name query或者 params")])]),t._v(" "),s("li",[s("p",[t._v("使用router-view标签展示link的链接的组件")])])]),t._v(" "),s("h3",{attrs:{id:"_3-2-router跳转-传参"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-router跳转-传参"}},[t._v("#")]),t._v(" 3.2 router跳转+传参")]),t._v(" "),s("h4",{attrs:{id:"_3-2-1-路由跳转的四种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-1-路由跳转的四种方式"}},[t._v("#")]),t._v(" 3.2.1 路由跳转的四种方式")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("to")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":to")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{name:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":to")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{path:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/home"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" \n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("div",{staticClass:"language-json line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-json"}},[s("code",[t._v("this.$router.push('/home')\nthis.$router.push("),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("name"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("'home'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(")\nthis.$router.push("),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("path"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v("'/home'"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(")\nthis.$router.replace()  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// (用法同上,push)")]),t._v("\nthis.$router.go(n)      "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// n是n可为正整数或负整数")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br")])]),s("h4",{attrs:{id:"_3-2-2-路由传参的三种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-2-路由传参的三种方式"}},[t._v("#")]),t._v(" 3.2.2 路由传参的三种方式")]),t._v(" "),s("ol",[s("li",[s("p",[t._v("路径带？key=value")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("to")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("/about?id=1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("About"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("query 相当于get")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":to")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{path:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("/query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(",query:{id:12}}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("带参数query"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[t._v("params 相当于post")]),t._v(" "),s("div",{staticClass:"language-html line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-html"}},[s("code",[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("router-link")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v(":to")]),s("span",{pre:!0,attrs:{class:"token attr-value"}},[s("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("{name:"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v("Params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("'")]),t._v(",params:{id:11}}"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("带参数params"),s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token tag"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("router-link")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])]),t._v(" "),s("h4",{attrs:{id:"_3-2-3-获取路由参数的方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-2-3-获取路由参数的方法"}},[t._v("#")]),t._v(" 3.2.3 获取路由参数的方法")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 路径传参和query属性传参，都用该方式获取参数;上面两种都是使用这一种")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("query"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val\n"),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// params属性传参，用该方式获取")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("$route"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("params"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("val\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br")])]),s("h3",{attrs:{id:"_3-3-动态路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-3-动态路由"}},[t._v("#")]),t._v(" 3.3  动态路由")]),t._v(" "),s("p",[t._v("作用："),s("strong",[t._v("多个路由对应同一个组件")]),t._v("，根据路由配置id不同，获取不同参数，进行相应处理")]),t._v(" "),s("h3",{attrs:{id:"_3-4-路由嵌套"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-4-路由嵌套"}},[t._v("#")]),t._v(" 3.4  路由嵌套")]),t._v(" "),s("p",[t._v("作用：一个页面某个位置根据链接不同，展示不同的组件，例如项目中的店家")]),t._v(" "),s("p",[s("strong",[t._v("展示默认子路由方法：在嵌套路由父路由中添加redirect属性，值为子路由的值")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("redirect")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'/childrouter'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_3-5-路由懒加载-按需加载"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-5-路由懒加载-按需加载"}},[t._v("#")]),t._v(" 3.5 路由懒加载/ 按需加载")]),t._v(" "),s("p",[t._v("作用：性能优化：不用到该路由，不加载该组件")]),t._v(" "),s("p",[t._v("ES6的impot方式:")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v(" "),s("span",{pre:!0,attrs:{class:"token function-variable function"}},[t._v("component")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v("'../views/About.vue'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("VUE中的异步组件进行懒加载方式:")]),t._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[t._v("component: resolve=>(require(['../views/About'],resolve))\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("h3",{attrs:{id:"_3-6-vue路由的三种种模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-6-vue路由的三种种模式"}},[t._v("#")]),t._v(" 3.6 vue路由的三种种模式")]),t._v(" "),s("p",[t._v("两种路由模式都不能真正改变url的改变")]),t._v(" "),s("h4",{attrs:{id:"hash路由-默认的"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#hash路由-默认的"}},[t._v("#")]),t._v(" hash路由（默认的）")]),t._v(" "),s("ul",[s("li",[t._v("hash模式会在url中自带#，不需要服务端配合（"),s("strong",[t._v("本质是利用的锚点定位，通过a标签进行定位")]),t._v("）")])]),t._v(" "),s("ul",[s("li",[s("p",[t._v("hash变化触发网页的跳转，即浏览器的前进和后退（并没有实现路由真实的跳转）")])]),t._v(" "),s("li",[s("p",[t._v("hash变化不会刷新页面，spa必须的特点")])]),t._v(" "),s("li",[s("p",[t._v("hash永远不会提交到server端")])])]),t._v(" "),s("h4",{attrs:{id:"history路由"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#history路由"}},[t._v("#")]),t._v(" history路由")]),t._v(" "),s("ul",[s("li",[t._v("用url规范的路由，但跳转时不刷新页面")]),t._v(" "),s("li",[t._v("模式需要服务端配合处理404的情况")]),t._v(" "),s("li",[t._v("history.pushState 使用它做页面跳转不会触发页面刷新")]),t._v(" "),s("li",[t._v("window.onpopstate 监听浏览器的前进和后退")])]),t._v(" "),s("h4",{attrs:{id:"abstract-模式没有使用浏览器api-可以放到node环境或者桌面应用中-本人感觉是对spa应用的兜底和能力扩展。"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#abstract-模式没有使用浏览器api-可以放到node环境或者桌面应用中-本人感觉是对spa应用的兜底和能力扩展。"}},[t._v("#")]),t._v(" "),s("strong",[t._v("abstract")]),t._v(" 模式没有"),s("strong",[t._v("使用浏览器api")]),t._v("，可以放到node环境或者桌面应用中， 本人感觉是对spa应用的兜底和能力扩展。")]),t._v(" "),s("h2",{attrs:{id:"_4-v-if-和-v-show-的区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-v-if-和-v-show-的区别"}},[t._v("#")]),t._v(" 4. v-if 和 v-show 的区别")]),t._v(" "),s("ul",[s("li",[t._v("作用: 都是控制元素隐藏和显示的")]),t._v(" "),s("li",[t._v("区别：\n"),s("ul",[s("li",[t._v("v-show: 控制的元素无论是true还是false，都被渲染出来了，通过display：none控制元素隐藏")]),t._v(" "),s("li",[t._v("v-if: 控制的元素是true，进行渲染，如果是false不渲染，根本在dom树结构中不显示")])])]),t._v(" "),s("li",[t._v("应用：\n"),s("ul",[s("li",[t._v("v-show: 适合使用在切换频繁显示/隐藏的元素上")]),t._v(" "),s("li",[t._v("v-if: 适合使用在切换不频繁，且元素内容很多，渲染一次性能消耗很大的元素上")])])])]),t._v(" "),s("blockquote",[s("p",[t._v("扩展补充：display:none、visibility:hidden 和 opacity:0 之间的区别？")])]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/618888ae9baa4c3096479b1f61bb37f3%7Etplv-k3u1fbpfcp-zoom-in-crop-mark%3A1304%3A0%3A0%3A0.awebp",alt:"display.png"}})]),t._v(" "),s("h2",{attrs:{id:"_5-v-for-为什么要加key"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_5-v-for-为什么要加key"}},[t._v("#")]),t._v(" 5. v-for 为什么要加key")]),t._v(" "),s("p",[s("strong",[t._v("v-for 为什么一定要加key，且key要不同")])]),t._v(" "),s("ol",[s("li",[t._v("使用"),s("code",[t._v("v-for")]),t._v("更新已渲染的元素列表时,默认用"),s("code",[t._v("就地复用")]),t._v("策略;列表数据修改的时候,他会根据key值去判断某个值是否修改,如果修改,则重新渲染这一项,否则复用之前的元素")]),t._v(" "),s("li",[t._v("key为什么不能是index，因为假设我们给数组前插入一个新元素，它的下标是0，那么和原来的第一个元素重复了，整个数组的key都发生了改变，这样就跟没有key的情况一样了")])]),t._v(" "),s("h2",{attrs:{id:"_6-keepalive"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_6-keepalive"}},[t._v("#")]),t._v(" 6. keepalive")]),t._v(" "),s("ol",[s("li",[t._v("默认情况下加在keepalive标签中的组件都会进行缓存")]),t._v(" "),s("li",[t._v("为了区别缓存哪些组件的方法\n"),s("ul",[s("li",[t._v("给keepalive 添加属性，组件名称指的是具体组件添加的name，不是路由里面的name")]),t._v(" "),s("li",[t._v("include 包含的组件(可以为字符串，数组，以及正则表达式,只有匹配的组件会被缓存)")]),t._v(" "),s("li",[t._v("exclude 排除的组件(以为字符串，数组，以及正则表达式,任何匹配的组件都不会被缓存)")]),t._v(" "),s("li",[t._v("最常用的方式：和路由配合使用：在路由中添加meta属性，美团项目App.vue")])])]),t._v(" "),s("li",[t._v("keepalive作用："),s("strong",[t._v("提升性能，避免重复加载一些不需要经常变动且内容较多的组件")])]),t._v(" "),s("li",[t._v("使用keepalive导致组件不重新加载，也就不会重新执行生命周期的函数，如果要解决这个问题，就需要两个属性进入时触发："),s("strong",[t._v("activated 退出时触发：deactivated")])])]),t._v(" "),s("h2",{attrs:{id:"_7-为什么-data-是一个函数"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_7-为什么-data-是一个函数"}},[t._v("#")]),t._v(" 7 为什么 data 是一个函数")]),t._v(" "),s("p",[t._v("组件中的 data 写成一个函数，数据以函数返回值形式定义，这样每复用一次组件，就会返回一份新的 data，类似于给每个组件实例创建一个私有的数据空间，让各个组件实例维护各自的数据。"),s("strong",[t._v("而单纯的写成对象形式，就使得所有组件实例共用了一份 data")]),t._v("，就会造成一个变了全都会变的结果;")]),t._v(" "),s("h2",{attrs:{id:"_8-为什么style中加scoped"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_8-为什么style中加scoped"}},[t._v("#")]),t._v(" 8. 为什么style中加scoped")]),t._v(" "),s("p",[s("strong",[t._v("区分样式的作用域")]),t._v("，原理是"),s("strong",[t._v("加上scoped就会给当前组件添加上自定义属性")]),t._v("，同时选择器上会添加自定义属性进行样式设置")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/202205031452463.png",alt:"image-20210619184557064"}})]),t._v(" "),s("h2",{attrs:{id:"_9-computed-和-watch-的区别和运用的场景"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-computed-和-watch-的区别和运用的场景"}},[t._v("#")]),t._v(" 9. computed 和 watch 的区别和运用的场景")]),t._v(" "),s("h3",{attrs:{id:"_9-1-computed"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-1-computed"}},[t._v("#")]),t._v(" 9.1 computed")]),t._v(" "),s("ul",[s("li",[t._v("初始化显示或者相关的 data、props 等属性数据发生变化的时候调用；")]),t._v(" "),s("li",[t._v("将复杂的计算逻辑从模板中抽离出来，使模板变得更加简洁")]),t._v(" "),s("li",[t._v("计算属性不在 data 中，它是基于data 或 props 中的数据通过计算得到的一个新值，这个新值根据已知值的变化而变化；")]),t._v(" "),s("li",[t._v("在 computed 属性对象中定义计算属性的方法，和取data对象里的数据属性一样，以属性访问的形式调用；")]),t._v(" "),s("li",[s("strong",[t._v("computed中的方法只有依赖的数据发生改变的时候才会执行,且计算的结果会缓存起来")]),t._v("，更像是input的keyup事件，获取到value值进行比对之后再触发")]),t._v(" "),s("li",[t._v("在computed中的，属性都有一个 get 和一个 set 方法，当数据变化时，调用 set 方法")])]),t._v(" "),s("h3",{attrs:{id:"_9-2-watch"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_9-2-watch"}},[t._v("#")]),t._v(" 9.2 watch")]),t._v(" "),s("ul",[s("li",[t._v("主要用来监听某些特定数据的变化，从而进行某些具体的业务逻辑操作，可以看作是 computed 和 methods 的结合体；")]),t._v(" "),s("li",[t._v("可以监听的数据来源：data，props，computed内的数据；")]),t._v(" "),s("li",[t._v("watch"),s("strong",[t._v("支持异步")]),t._v("；")]),t._v(" "),s("li",[s("strong",[t._v("不支持缓存")]),t._v("，监听的数据改变，直接会触发相应的操作；更像是input的change事件，输入就触发，不比对")]),t._v(" "),s("li",[t._v("监听函数有两个参数，第一个参数是最新的值，第二个参数是输入之前的值，顺序一定是新值，旧值。")])]),t._v(" "),s("h3",{attrs:{id:"总结-2"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结-2"}},[t._v("#")]),t._v(" 总结：")]),t._v(" "),s("p",[s("strong",[t._v("computed：")]),t._v(" "),s("strong",[t._v("是计算属性，依赖其它属性值，并且 computed 的值有缓存，只有它依赖的属性值发生改变，下一次获取 computed 的值时才会重新计算 computed 的值；")])]),t._v(" "),s("p",[s("strong",[t._v("watch：")]),t._v(" "),s("strong",[t._v("更多的是「观察」的作用，类似于某些数据的监听回调 ，每当监听的数据变化时都会执行回调进行后续操作")]),t._v("；")]),t._v(" "),s("p",[s("strong",[t._v("运用场景：")])]),t._v(" "),s("ul",[s("li",[t._v("当我们需要进行数值计算，并且依赖于其它数据时，应该使用 computed，因为可以利用 computed 的缓存特性，避免每次获取值时，都要重新计算；")]),t._v(" "),s("li",[t._v("当我们需要在数据变化时执行异步或开销较大的操作时，应该使用 watch，使用 watch 选项允许我们执行异步操作 ( 访问一个 API )，限制我们执行该操作的频率，并在我们得到最终结果前，设置中间状态。这些都是计算属性无法做到的。")])]),t._v(" "),s("p",[t._v("计算属性原理详解 "),s("a",{attrs:{href:"https://juejin.cn/post/6956407362085191717",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门"),s("OutboundLink")],1)]),t._v(" "),s("p",[t._v("侦听属性原理详解 "),s("a",{attrs:{href:"https://juejin.cn/post/6954925963226382367",target:"_blank",rel:"noopener noreferrer"}},[t._v("传送门"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_10-vue-组件通讯有哪几种方式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-vue-组件通讯有哪几种方式"}},[t._v("#")]),t._v(" 10. Vue 组件通讯有哪几种方式")]),t._v(" "),s("h3",{attrs:{id:"_10-1-父传子"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-1-父传子"}},[t._v("#")]),t._v(" 10.1 父传子")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("父组件通过"),s("code",[t._v("props")]),t._v("给子组件传值")])]),t._v(" "),s("li",[s("p",[t._v("父组件通过"),s("code",[t._v("$ref")]),t._v("给子组件传值（"),s("code",[t._v("this.$refs.child.getMsg(this.msg)")]),t._v("）")])]),t._v(" "),s("li",[s("p",[t._v("父组件通过"),s("code",[t._v("$children")]),t._v("给子组件传值")])]),t._v(" "),s("li",[s("p",[t._v("父组件中通过 provide 来提供变量，然后在子组件中通过 inject 来注入变量。(官方不推荐在实际业务中使用，但是写组件库时很常用)")])])]),t._v(" "),s("h4",{attrs:{id:"props和-ref和-children和provide-inject的主要区别"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#props和-ref和-children和provide-inject的主要区别"}},[t._v("#")]),t._v(" "),s("code",[t._v("props")]),t._v("和"),s("code",[t._v("$ref")]),t._v("和"),s("code",[t._v("$children")]),t._v("和"),s("code",[t._v("provide/inject")]),t._v("的主要区别：")]),t._v(" "),s("ul",[s("li",[t._v("props 侧重于数据的传递，并不能获取子组件里的属性和方法，适用于自定义内容的使用场景")]),t._v(" "),s("li",[t._v("$ref 侧重于获取子组件里的属性和方法，并不是太适合传递数据，并且 ref 常用于获取dom元素，起到选择器的作用")]),t._v(" "),s("li",[t._v("$children 侧重于获取所有的直接子组件，得到的是一个无序的数组，并不太适合向多个子组件传递数据")]),t._v(" "),s("li",[t._v("provide/inject 侧重于在开发高阶插件/组件库时使用，并不推荐用于普通应用程序代码中")])]),t._v(" "),s("h3",{attrs:{id:"_10-2-子组件给父组件传值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-2-子组件给父组件传值"}},[t._v("#")]),t._v(" 10.2 子组件给父组件传值")]),t._v(" "),s("ul",[s("li",[s("p",[t._v("子组件通过触发"),s("code",[t._v("$emit")]),t._v("事件给父组件传值")])]),t._v(" "),s("li",[s("p",[s("code",[t._v("$parent")]),t._v(" 给组件进行传值")])])]),t._v(" "),s("h3",{attrs:{id:"_10-3-兄弟组件之间的传值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_10-3-兄弟组件之间的传值"}},[t._v("#")]),t._v(" 10.3 兄弟组件之间的传值")]),t._v(" "),s("h4",{attrs:{id:"兄弟之间传值通过eventbus"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#兄弟之间传值通过eventbus"}},[t._v("#")]),t._v(" 兄弟之间传值通过"),s("code",[t._v("eventBus")])]),t._v(" "),s("p",[t._v("eventBus 就是一个vue实例来作为全局的事件总线，兄弟组件之间通过  "),s("code",[t._v("eventBus.$on")]),t._v("和"),s("code",[t._v("eventBus.$emit")]),t._v("注册触发事件来传递数据")]),t._v(" "),s("p",[t._v("如果组件销毁了记得"),s("code",[t._v("eventBus.$off")])]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6904536680183791623",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue组件之间的传值"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"_11-vue-的生命周期方法有哪些-一般在哪一步发请求"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-vue-的生命周期方法有哪些-一般在哪一步发请求"}},[t._v("#")]),t._v(" 11. Vue 的生命周期方法有哪些 一般在哪一步发请求")]),t._v(" "),s("img",{staticStyle:{zoom:"67%"},attrs:{src:"https://cn.vuejs.org/images/lifecycle.png",alt:"Vue 实例生命周期"}}),t._v(" "),s("h3",{attrs:{id:"_11-1-单页面的生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-1-单页面的生命周期"}},[t._v("#")]),t._v(" 11.1 单页面的生命周期")]),t._v(" "),s("p",[s("strong",[t._v("beforeCreate")]),t._v(" 在实例初始化之后，数据观测(data observer) 和 event/watcher 事件配置之前被调用。在当前阶段 data、methods、computed 以及 watch 上的数据和方法都不能被访问")]),t._v(" "),s("p",[s("strong",[t._v("created")]),t._v(" 实例创建完成，可访问data、computed、watch、methods上的方法和数据，未挂载到DOM，不能访问到el属性，el属性，ref属性内容为空数组常用于简单的ajax请求，页面的初始化,如果要操作Dom可以在"),s("code",[t._v("$nextTick")])]),t._v(" "),s("p",[s("strong",[t._v("beforeMount")]),t._v(" 在挂载开始之前被调用：相关的 render 函数首次被调用。")]),t._v(" "),s("p",[s("strong",[t._v("mounted")]),t._v(" 在挂载完成后发生，在当前阶段，"),s("strong",[t._v("真实的 Dom 挂载完毕，数据完成双向绑定，可以访问到 Dom 节点")])]),t._v(" "),s("p",[s("strong",[t._v("beforeUpdate")]),t._v(" 数据更新时调用，发生在虚拟 DOM 重新渲染和打补丁（patch）之前。可以在这个钩子中进一步地更改状态，这不会触发附加的重渲染过程")]),t._v(" "),s("p",[s("strong",[t._v("updated")]),t._v(" 发生在更新完成之后，当前阶段组件 Dom 已完成更新。要注意的是避免在此期间更改数据，因为这可能会导致无限循环的更新，该钩子在服务器端渲染期间不被调用。")]),t._v(" "),s("p",[s("strong",[t._v("beforeDestroy")]),t._v("：实例销毁之前调用。这一步，实例仍然完全可用，this仍能获取到实例，常用于销毁定时器、解绑全局事件、销毁插件对象等操作")]),t._v(" "),s("h3",{attrs:{id:"_11-2-异步请求在哪一步发起"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-2-异步请求在哪一步发起"}},[t._v("#")]),t._v(" 11.2 "),s("strong",[t._v("异步请求在哪一步发起？")])]),t._v(" "),s("p",[t._v("可以在钩子函数 created、beforeMount、mounted 中进行异步请求，因为在这三个钩子函数中，data 已经创建，可以将服务端端返回的数据进行赋值。")]),t._v(" "),s("p",[t._v("如果"),s("strong",[t._v("异步请求不需要依赖 Dom 推荐在 created 钩子函数中调用异步请求")]),t._v("，因为在 created 钩子函数中调用异步请求有以下优点：")]),t._v(" "),s("ul",[s("li",[t._v("能更快获取到服务端数据，减少页面  loading 时间；")]),t._v(" "),s("li",[t._v("ssr  不支持 beforeMount 、mounted 钩子函数，所以放在 created 中有助于一致性；")])]),t._v(" "),s("h3",{attrs:{id:"_11-3-父子组件生命周期"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_11-3-父子组件生命周期"}},[t._v("#")]),t._v(" 11.3 父子组件生命周期")]),t._v(" "),s("ol",[s("li",[t._v("挂载：父亲created> 子created > 子mounted> 父亲mounted>")]),t._v(" "),s("li",[t._v("更新：父亲beforeUpdate > 子beforeUpdated > 子updated > 父亲updated")]),t._v(" "),s("li",[t._v("销毁：父亲beforeDestroy> 子beforeDestroy > 子destroyed> 父destroyed")])]),t._v(" "),s("h2",{attrs:{id:"_12-谈一下对-vuex-的个人理解"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-谈一下对-vuex-的个人理解"}},[t._v("#")]),t._v(" 12 谈一下对 vuex 的个人理解")]),t._v(" "),s("h3",{attrs:{id:"_12-1-vuex的基本概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-1-vuex的基本概念"}},[t._v("#")]),t._v(" 12.1 vuex的基本概念")]),t._v(" "),s("p",[t._v("vuex 是专门为 vue 提供的全局状态管理系统，用于多个组件中数据共享、数据缓存等。（无法持久化、内部核心原理是通过创造一个全局实例 new Vue）")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/202205041608591.png",alt:"vuex"}})]),t._v(" "),s("p",[t._v("主要包括以下几个模块：")]),t._v(" "),s("ul",[s("li",[t._v("State：定义了应用状态的数据结构，可以在这里设置默认的初始状态。")]),t._v(" "),s("li",[t._v("Getter：允许组件从 Store 中获取数据，mapGetters 辅助函数仅仅是将 store 中的 getter 映射到局部计算属性。")]),t._v(" "),s("li",[t._v("Mutation：是唯一更改 store 中状态的方法，且必须是同步函数。")]),t._v(" "),s("li",[t._v("Action：用于提交 mutation，而不是直接变更状态，可以包含任意异步操作。")]),t._v(" "),s("li",[t._v("Module：允许将单一的 Store 拆分为多个 store 且同时保存在单一的状态树中。")])]),t._v(" "),s("h3",{attrs:{id:"_12-2-vuex-为什么要分模块并且加命名空间"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-2-vuex-为什么要分模块并且加命名空间"}},[t._v("#")]),t._v(" 12.2 Vuex 为什么要分模块并且加命名空间")]),t._v(" "),s("p",[s("strong",[t._v("模块")]),t._v(":由于使用单一状态树，应用的所有状态会集中到一个比较大的对象。当应用变得非常复杂时，store 对象就有可能变得相当臃肿。为了解决以上问题，Vuex 允许我们将 store 分割成模块（module）。每个模块拥有自己的 state、mutation、action、getter、甚至是嵌套子模块。")]),t._v(" "),s("p",[s("strong",[t._v("命名空间")]),t._v("：默认情况下，模块内部的 action、mutation 和 getter 是注册在全局命名空间的——这样使得多个模块能够对同一 mutation 或 action 作出响应。如果希望你的模块具有更高的封装度和复用性，你可以通过添加 namespaced: true 的方式使其成为带命名空间的模块。当模块被注册后，它的所有 getter、action 及 mutation 都会自动根据模块注册的路径调整命名。")]),t._v(" "),s("h3",{attrs:{id:"_12-3-vuex-页面刷新数据丢失怎么解决"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_12-3-vuex-页面刷新数据丢失怎么解决"}},[t._v("#")]),t._v(" 12.3 Vuex 页面刷新数据丢失怎么解决")]),t._v(" "),s("p",[t._v("需要做 vuex 数据持久化 一般使用本地存储的方案来保存数据 可以自己设计存储方案 也可以使用第三方插件")]),t._v(" "),s("p",[t._v("推荐使用 vuex-persist 插件，它就是为 Vuex 持久化存储而生的一个插件。不需要你手动存取 storage ，而是直接将状态保存至 cookie 或者 localStorage 中")]),t._v(" "),s("h2",{attrs:{id:"_13-nexttick"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_13-nexttick"}},[t._v("#")]),t._v(" 13. $nextTick")]),t._v(" "),s("p",[t._v("this.$nextTick()，这样等dom更新完了再执行this.$nextTick()里面的回调，这样就可以操作或者获取dom的内容了，同时$nextTick()是一个微任务优先的一个异步任务；")]),t._v(" "),s("h2",{attrs:{id:"_14-vue-内置指令"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_14-vue-内置指令"}},[t._v("#")]),t._v(" 14. vue 内置指令")]),t._v(" "),s("p",[s("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/%E5%86%85%E7%BD%AE%E6%8C%87%E4%BB%A4.svg",alt:"内置指令"}})]),t._v(" "),s("h2",{attrs:{id:"_15-怎样理解-vue-的单向数据流"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_15-怎样理解-vue-的单向数据流"}},[t._v("#")]),t._v(" 15. 怎样理解 Vue 的单向数据流")]),t._v(" "),s("p",[t._v("数据总是从父组件传到子组件，子组件没有权利修改父组件传过来的数据，只能请求父组件对原始数据进行修改。这样会防止从子组件意外改变父级组件的状态，从而导致你的应用的数据流向难以理解。")]),t._v(" "),s("p",[t._v("如果实在想更改的话要改变父组件的prop值可以再 data 里面定义一个变量 并用 prop 的值初始化它 之后用$emit 通知父组件去修改")]),t._v(" "),s("h2",{attrs:{id:"_16-v-if-与-v-for-为什么不建议一起使用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_16-v-if-与-v-for-为什么不建议一起使用"}},[t._v("#")]),t._v(" 16. v-if 与 v-for 为什么不建议一起使用")]),t._v(" "),s("p",[t._v("v-for 和 v-if 不要在同一个标签中使用,因为解析时先解析 v-for 再解析 v-if，因此在循环便利的时候每遍历一次元素列表就是进行一次v-if判断。"),s("strong",[t._v("如果遇到需要同时使用时可以考虑写成计算属性的方式")]),t._v("。")]),t._v(" "),s("details",{staticClass:"custom-block details"},[s("summary",[t._v("参考链接")]),t._v(" "),s("p",[s("a",{attrs:{href:"https://juejin.cn/post/6961222829979697165",target:"_blank",rel:"noopener noreferrer"}},[t._v("vue面试基础"),s("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=r.exports}}]);