(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{585:function(s,a,e){"use strict";e.r(a);var t=e(10),n=Object(t.a)({},(function(){var s=this,a=s.$createElement,e=s._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("总结容器和数据卷")]),s._v(" "),e("h2",{attrs:{id:"_1-数据卷介绍"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-数据卷介绍"}},[s._v("#")]),s._v(" 1 数据卷介绍")]),s._v(" "),e("p",[e("a",{attrs:{href:"https://so.csdn.net/so/search?q=Docker&spm=1001.2101.3001.7020",target:"_blank",rel:"noopener noreferrer"}},[s._v("Docker"),e("OutboundLink")],1),s._v("将运用与运行的环境打包形成容器运行， Docker容器产生的数据，如果不通过docker commit生成新的镜像，使得数据做为镜像的一部分保存下来， 那么当容器删除后，数据自然也就没有了。 为了能保存数据在Docker中我们使用卷")]),s._v(" "),e("p",[e("strong",[s._v("卷的设计目的就是为了实现数据持久化，完全独立于容器的生存周期，因此Docker不会在容器删除时删除其挂载的数据卷")])]),s._v(" "),e("p",[s._v("数据卷的特点：")]),s._v(" "),e("ol",[e("li",[s._v("数据卷可以再容器之间共享或者重用数据")]),s._v(" "),e("li",[s._v("卷在更改可以直接生效")]),s._v(" "),e("li",[s._v("数据卷中的更更改不会包含在镜像的更新中")]),s._v(" "),e("li",[s._v("数据卷的生命周期一直持续到没有容器使用它为止")])]),s._v(" "),e("h2",{attrs:{id:"_2-简单使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-简单使用"}},[s._v("#")]),s._v(" 2 简单使用")]),s._v(" "),e("p",[s._v("运行容器，指定挂载数据卷命令")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it -v 主机目录:容器目录\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it -v /home/test:/home centos /bin/bash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("查看容器对应元数据"),e("code",[s._v("docker inspect 容器id")]),s._v("，可以在Mounts节点查看建立的数据卷信息")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/202206111536885.png",alt:"anli"}})]),s._v(" "),e("p",[s._v("即使容器停止运行或者容器删除，仍然可以实现数据同步，本地的数据卷不会丢失。")]),s._v(" "),e("h2",{attrs:{id:"_3-mysql容器简历数据卷同步数据"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-mysql容器简历数据卷同步数据"}},[s._v("#")]),s._v(" 3 MySQL容器简历数据卷同步数据")]),s._v(" "),e("p",[s._v("在Linux下的MySQL默认的数据文档存储目录为/var/lib/mysql，默认的配置文件的位置/etc/mysql/conf.d，为了确保MySQL镜像或容器删除后，造成的数据丢失，下面建立数据卷保存MySQL的数据和文件。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6603")]),s._v(":3306 -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/data:/var/lib/mysql -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v(" --name mysql01 mysql:5.7\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"_4-常用命令"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-常用命令"}},[s._v("#")]),s._v(" 4 常用命令")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("创建数据卷")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" volume create my-vol\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("查看所有的数据卷")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" volume "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("查看指定的数据卷")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" volume inspect my-vol\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("删除数据卷 "),e("code",[s._v("docker volume rm ...")])]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" volume "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" my-vol\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])])]),s._v(" "),e("li",[e("p",[s._v("删除容器之时删除相关的卷")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -v "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("数据卷是被设计用来持久化数据的，它的生命周期独立于容器，Docker 不会在容器被删除后自动删除数据卷，并且也不存在垃圾回收这样的机制来处理没有任何容器引用的数据卷 。如果需要在删除容器的同时移除数据卷。可以在删除容器的时候使用 "),e("code",[s._v("docker rm -v")]),s._v(" 这个命令。")])])]),s._v(" "),e("h2",{attrs:{id:"_5-具名挂载和匿名挂载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-具名挂载和匿名挂载"}},[s._v("#")]),s._v(" 5 具名挂载和匿名挂载")]),s._v(" "),e("h3",{attrs:{id:"_5-1-匿名挂载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-1-匿名挂载"}},[s._v("#")]),s._v(" 5.1 匿名挂载")]),s._v(" "),e("p",[s._v("匿名挂载就是在指定数据卷的时候，不指定容器路径对应的主机路径，这样对应映射的主机路径就是默认的路径/var/lib/docker/volumes/中自动生成一个随机命名的文件夹。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -P --name nginx01 -v /etc/nginx nginx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"_5-2-具名挂载"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-2-具名挂载"}},[s._v("#")]),s._v(" 5.2 具名挂载")]),s._v(" "),e("p",[s._v("具名挂载，就是指定文件夹名称，区别于指定路径挂载，这里的指定文件夹名称是在Docker指定的默认数据卷路径下的。通过"),e("code",[s._v("docker volume ls")]),s._v("命令可以查看当前数据卷的目录情况。")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -P --name nginx02 -v juming-nginx:/etc/nginx nginx\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"_6-dockerfile中设置数据卷"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-dockerfile中设置数据卷"}},[s._v("#")]),s._v(" 6 Dockerfile中设置数据卷")]),s._v(" "),e("p",[s._v("们可以在Dockerfile中使用VOLUME指令来给镜像添加一个或多个数据卷。")]),s._v(" "),e("p",[s._v("下面使用Dockerfile构建一个新的镜像，dockerfile01文件的内容，匿名挂载了volume01和volume02两个目录")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[s._v("FROM centos\n\nVOLUME "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"volume01"')]),s._v(","),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"volume02"')]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n\nCMD "),e("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[s._v('"----end----"')]),s._v("\nCMD /bin/bash\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("h2",{attrs:{id:"_7-容器数据卷"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-容器数据卷"}},[s._v("#")]),s._v(" 7 容器数据卷")]),s._v(" "),e("p",[s._v("容器数据卷是指在简历数据卷，来同步多个容器间的数据，实现容器间的数据同步")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://raw.githubusercontent.com/Larrydu98/BlogIMage/main/202206111546718.png",alt:"容器数据卷"}})]),s._v(" "),e("h3",{attrs:{id:"实现多个mysql之间的数据同步"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现多个mysql之间的数据同步"}},[s._v("#")]),s._v(" 实现多个mysql之间的数据同步")]),s._v(" "),e("p",[s._v("下面同步两个MySQL的数据库和配置文件，与上面的操作相同，首先建立数据卷，然后给另一个MySQL容器建立容器数据卷挂载，示例：")]),s._v(" "),e("div",{staticClass:"language-shell line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-shell"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6603")]),s._v(":3306 -v /home/mysql/conf:/etc/mysql/conf.d -v /home/mysql/data:/var/lib/mysql -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v(" --name mysql01 mysql:5.7\n"),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d -p "),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("6604")]),s._v(":3306 -e "),e("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("MYSQL_ROOT_PASSWORD")]),e("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),e("span",{pre:!0,attrs:{class:"token number"}},[s._v("123456")]),s._v(" --name mysql02 --volumes-from mysql01 mysql:5.7\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"title"}),e("p",[e("a",{attrs:{href:"https://blog.csdn.net/huangjhai/article/details/119860628",target:"_blank",rel:"noopener noreferrer"}},[s._v("容器数据卷"),e("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=n.exports}}]);